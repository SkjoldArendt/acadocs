{"config":{"indexing":"full","lang":["da"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Velkommen til ACADocs! \u00b6 Her finder du dokumentation om arbejdsgange, software og meget andet, der benyttes hos Aarhus Stadsarkiv.","title":"Home"},{"location":"#velkommen-til-acadocs","text":"Her finder du dokumentation om arbejdsgange, software og meget andet, der benyttes hos Aarhus Stadsarkiv.","title":"Velkommen til ACADocs!"},{"location":"acquisition/","text":"Overview inside acquisition","title":"Modtagelse"},{"location":"acquisition/acquiring-analog-material/","text":"Modtagelse af analog materiale \u00b6","title":"Acquiring analog material"},{"location":"acquisition/acquiring-analog-material/#modtagelse-af-analog-materiale","text":"","title":"Modtagelse af analog materiale"},{"location":"acquisition/acquiring-digital-material/","text":"Digitalt Materiale \u00b6 Modtagelse af digitalt materiale Identifikator \u00b6 N\u00e5r digitalt materiale modtages til bevaring hos Aarhus Stadsarkiv, skal afleveringen gives et AARS-ID med f\u00f8lgende m\u00f8nster. ^(\\w+\\.)?(AARS\\.).* Dette m\u00f8nster forst\u00e5s som f\u00f8lger. ^(\\w+\\.)? angiver, at der kan v\u00e6re et valgfrit alfanumerisk pr\u00e6fiks afsluttet med punktum, for eksempel AVID. (AARS\\.) angiver, at strengen AARS. er p\u00e5kr\u00e6vet som del af navnet .* angiver, at der kan v\u00e6re et valgfrit postfiks Derfor er f\u00f8lgende eksempler valide AARS-ID'er Eksempel AVID.AARS.3.1 AARS.TEST 123bc.AARS.2s mens disse ikke er Eksempel AVID.3.1 AARSTEST 123.bc.AARS.2s","title":"Digitalt Materiale"},{"location":"acquisition/acquiring-digital-material/#digitalt-materiale","text":"Modtagelse af digitalt materiale","title":"Digitalt Materiale"},{"location":"acquisition/acquiring-digital-material/#identifikator","text":"N\u00e5r digitalt materiale modtages til bevaring hos Aarhus Stadsarkiv, skal afleveringen gives et AARS-ID med f\u00f8lgende m\u00f8nster. ^(\\w+\\.)?(AARS\\.).* Dette m\u00f8nster forst\u00e5s som f\u00f8lger. ^(\\w+\\.)? angiver, at der kan v\u00e6re et valgfrit alfanumerisk pr\u00e6fiks afsluttet med punktum, for eksempel AVID. (AARS\\.) angiver, at strengen AARS. er p\u00e5kr\u00e6vet som del af navnet .* angiver, at der kan v\u00e6re et valgfrit postfiks Derfor er f\u00f8lgende eksempler valide AARS-ID'er Eksempel AVID.AARS.3.1 AARS.TEST 123bc.AARS.2s mens disse ikke er Eksempel AVID.3.1 AARSTEST 123.bc.AARS.2s","title":"Identifikator"},{"location":"archival-versions/","text":"Alt om arbejdet med arkiveringsversioner","title":"Introduktion"},{"location":"archival-versions/ada/","text":"Kristians dokumentation af testarbejdet i ADA","title":"Ada"},{"location":"archival-versions/master-formats/","text":"Description of our choice of master-formats.","title":"Master formats"},{"location":"archival-versions/notes-arkivering/","text":"I det f\u00f8lgende beskrives processen med arkiveringsversioner, som modtages i forbindelse med Notes-projektet. Bem\u00e6rk I dokumentationen bruges AVID.AARS.3.1 som eksempel. Husk at udskifte AVID \"3\" med det relevante id. Arkiveringsversion betegnes i det f\u00f8lgende ogs\u00e5 aflevering . Modtagelse og validering \u00b6 Kopiering til lokal disk \u00b6 Arkiveringsversioner fra Notes-projektet afleveres p\u00e5 usb-diske, hvorfra de umiddelbart efter modtagelse kopieres til en placering p\u00e5 vores infrastrutur (ekstern usb-harddisk, intern D-drev eller lignende). Advarsel Det er vigtigt at stoppe Kaspersky s\u00e5 snart den modtagne usb-disk er plugget til den administrative PC, da Kaspersky i det skjulte sletter gamle .xls-filer, hvis de indeholder macroer. Arkiveringsversionen kopieres fuldgyldigt til en mappe, som navngives med afleveringens AVID og tilf\u00f8jes en \"_metadata\"-mappe, hvori vi efterf\u00f8lgende samler diverse logs, mails, statusdokumenter m.m. med relation til afleveringen og testen: /AVID.AARS.3.1 |-- _metadata/ |-- ADA_log-leverand\u00f8r.rtf |-- status.txt |-- ... |-- ContextDocumentation/ |-- Indices/ |-- Schemas/ |-- Tables/ |-- OriginalDocuments/ |-- docCollection1 |-- docCollection2 |-- ... Efter fuldendt kopiering l\u00e6gges den afleverede usb-disk til side. Vi skal ikke bruge den originale aflevering mere, med mindre vi senere i processen ved et uheld kommer til at slette eller \u00e6ndre noget. Validering af dokumentstruktur \u00b6 Hvis afleveringen indeholder digitale dokumenter (OriginalDocuments), foretages nu en indledningsvis validering af disse (tjekker for tomme mappe/filer, tilstedev\u00e6relsen af .zip -filer, andet?). Vi benytter digiarch til at foretage denne indledende validering af dokumenterne og strukturen i de enkelte docCollections . Kald process p\u00e5 den mappe, som arkiveringsversionen er kopieret til: digiarch D :\\ filer \\ AVID . AARS . 3 . 1 process Dokumentationen til digiarch indeholder yderligere beskrivelser af, hvordan v\u00e6rkt\u00f8jet benyttes Digiarch producerer sin egen \"_metadata\"-mappe med en \"files.db\"-fil, som efter den indledningsvise test skal placeres i roden af \"OriginalDocuments\": /AVID.AARS.3.1 |-- _metadata/ |-- ADA_log-leverand\u00f8r.rtf |-- status.txt |-- ... |-- ContextDocumentation/ |-- Indices/ |-- Schemas/ |-- Tables/ |-- OriginalDocuments/ |-- _metadata/ |-- files.db |-- docCollection1 |-- docCollection2 |-- ... Kopiering til AcaStorage \u00b6 Hvis resultatet af dokumentvalideringen ikke n\u00f8dvendigg\u00f8r en genaflevering, kopieres hele arkiveringsversionsmappen inkl. \"_metadata\" -mapperne til AcaStorage: \u00c5bn Microsoft Azure Storage Explorer Mappen med arkiveringsversionen kopieres nu samlet eller over flere omgange ind i f\u00f8lgende mappe: MKB {din mail}/Storage Accounts/acastorage/arkver/ /AVID.AARS.3.1 |-- _metadata/ |-- ... |-- ContextDocumentation/ |-- Indices/ |-- Schemas/ |-- Tables/ |-- OriginalDocuments/ |-- _metadata/ |-- files.db |-- docCollection1.zip |-- docCollection2.zip Vigtigt Al det test- og konverteringsarbejde, som f\u00f8lger, skal arbejde med den kopi af arkiveringsversionen, som nu ligger p\u00e5 AcaStorage. Den kopi af arkiveringsversionen, som f\u00f8rst blev kopieret ind i det lokale system, skal som n\u00e6vnt forblive uber\u00f8rt, s\u00e5 vi altid kan g\u00e5 tilbage til udgangspunktet. Identifikation af dokumenter \u00b6 Inden dokumentkonvertering foretages en grundig identifikation af de originale dokumenter. Dette g\u00f8res b\u00e5de for at fange s\u00e5 mange problemer (filendelser, tomme filer...) som muligt inden konverteringsprocessen, men ogs\u00e5 for at finde ud af, hvilket master-format en given fil skal konverteres til. Vi benytter endnu engang digiarch til at styre denne omst\u00e6ndige proces, som er n\u00e6rmere beskrevet her: dokumentation til digiarch . N\u00e5r alle fejl eller misforhold, som det har v\u00e6ret muligt at tilrette, er afhjulpet, st\u00e5r man tilbage med en filliste, hvor minimum en fil almindeligvis stadig vil v\u00e6re fejlbeh\u00e6ftet og dermed have en pronomID, som indikerer en af f\u00f8lgende fejltyper: filen er tom filen er korrupt filen er kodeordsbeskyttet filen er ikke genkendelig og dermed ikke identific\u00e9rbar Test af databasen \u00b6 Afleveringen er nu klar til at blive testet i ADA. Denne proces er beskrevet under ADA-dokumentationen , og her skal blot n\u00e6vnes, at de logs, notater m.m., som m\u00e5tte blive produceret under testen, nu findes i \"_metadata\" -mappen i roden af den afleveringen, som ligger p\u00e5 AcaStorage. N\u00e5r ADA-testen er afsluttet og arkiveringsversionen kan godkendes, er det tid til at konvertere de originale dokumenter til Stadsarkivets \"master\" -formater . Konvertering til master-formater \u00b6 Vi benytter convertool til at konvertere de originale dokumenter til master-formater. Denne proces er beskrevet i convertool-dokumentationen , og her skal blot n\u00e6vnes, at de konverterede dokumenter l\u00e6gges i samme struktur som de originale dokumenter, blot i mappen \"MasterDocuments\": /AVID.AARS.3.1 |-- _metadata/ |-- ADA_log-leverand\u00f8r.rtf |-- ADA_log-test.rtf |-- test-notat.txt |-- status.txt |-- ContextDocumentation/ |-- Indices/ |-- Schemas/ |-- Tables/ |-- OriginalDocuments/ |-- _metadata/ |-- files.db |-- docCollection1/ |-- docCollection2/ |-- MasterDocuments/ |-- _metadata/ |-- files.db |-- docCollection1/ |-- docCollection2/ Filerne testes og fejlrettes med digiarch , og databasen testes med ADA . De to processer er uafh\u00e6ngige af hinanden og kan derfor k\u00f8res b\u00e5de separat og parallelt. Konvertering til arkiv-formater \u00b6 N\u00e5r b\u00e5de databasen og dokumenterne er gennemarbejdet og kan godkendes, konverteres master-dokumenterne slutteligt til arkiv-formater (tiff, jpeg2000, MPEG..). Igen benyttes convertool , og igen l\u00e6gges de konverterede filer i samme struktur som de originale dokumenter, blot i mappen \"Documents\": /AVID.AARS.3.1 |-- _metadata/ |-- ADA_log-leverand\u00f8r.rtf |-- ADA_log-test.rtf |-- test-notat.txt |-- status.txt |-- ContextDocumentation/ |-- Indices/ |-- Schemas/ |-- Tables/ |-- OriginalDocuments/ |-- _metadata/ |-- files.db |-- docCollection1/ |-- docCollection2/ |-- MasterDocuments/ |-- _metadata/ |-- files.db |-- docCollection1/ |-- docCollection2/ |-- Documents/ |-- _metadata/ |-- files.db |-- docCollection1/ |-- docCollection2/ Godkendelse af arkiveringsversion \u00b6 Efter succesrig dokumentkonvertering afsluttes processen p\u00e5 f\u00f8lgende vis: Det overordnede Notes-statusdokument p\u00e5 OneDrive opdateres med de relevante informationer Hele mappen med arkiveringsversionen (\"AVID.AARS.3.1\\\") kopieres til \"arkvers\"-mappen p\u00e5 funktionsdrevet: C:\\Users\\{az-ident}\\Aarhus kommune\\FNK-Aarhus Stadsarkiv - Dokumenter\\arkvers\\ Improvento informeres i en mail om godkendelsen Den relevante magistratsafdeling informeres i en mail om godkendelsen","title":"Notesarkivering"},{"location":"archival-versions/notes-arkivering/#modtagelse-og-validering","text":"","title":"Modtagelse og validering"},{"location":"archival-versions/notes-arkivering/#kopiering-til-lokal-disk","text":"Arkiveringsversioner fra Notes-projektet afleveres p\u00e5 usb-diske, hvorfra de umiddelbart efter modtagelse kopieres til en placering p\u00e5 vores infrastrutur (ekstern usb-harddisk, intern D-drev eller lignende). Advarsel Det er vigtigt at stoppe Kaspersky s\u00e5 snart den modtagne usb-disk er plugget til den administrative PC, da Kaspersky i det skjulte sletter gamle .xls-filer, hvis de indeholder macroer. Arkiveringsversionen kopieres fuldgyldigt til en mappe, som navngives med afleveringens AVID og tilf\u00f8jes en \"_metadata\"-mappe, hvori vi efterf\u00f8lgende samler diverse logs, mails, statusdokumenter m.m. med relation til afleveringen og testen: /AVID.AARS.3.1 |-- _metadata/ |-- ADA_log-leverand\u00f8r.rtf |-- status.txt |-- ... |-- ContextDocumentation/ |-- Indices/ |-- Schemas/ |-- Tables/ |-- OriginalDocuments/ |-- docCollection1 |-- docCollection2 |-- ... Efter fuldendt kopiering l\u00e6gges den afleverede usb-disk til side. Vi skal ikke bruge den originale aflevering mere, med mindre vi senere i processen ved et uheld kommer til at slette eller \u00e6ndre noget.","title":"Kopiering til lokal disk"},{"location":"archival-versions/notes-arkivering/#validering-af-dokumentstruktur","text":"Hvis afleveringen indeholder digitale dokumenter (OriginalDocuments), foretages nu en indledningsvis validering af disse (tjekker for tomme mappe/filer, tilstedev\u00e6relsen af .zip -filer, andet?). Vi benytter digiarch til at foretage denne indledende validering af dokumenterne og strukturen i de enkelte docCollections . Kald process p\u00e5 den mappe, som arkiveringsversionen er kopieret til: digiarch D :\\ filer \\ AVID . AARS . 3 . 1 process Dokumentationen til digiarch indeholder yderligere beskrivelser af, hvordan v\u00e6rkt\u00f8jet benyttes Digiarch producerer sin egen \"_metadata\"-mappe med en \"files.db\"-fil, som efter den indledningsvise test skal placeres i roden af \"OriginalDocuments\": /AVID.AARS.3.1 |-- _metadata/ |-- ADA_log-leverand\u00f8r.rtf |-- status.txt |-- ... |-- ContextDocumentation/ |-- Indices/ |-- Schemas/ |-- Tables/ |-- OriginalDocuments/ |-- _metadata/ |-- files.db |-- docCollection1 |-- docCollection2 |-- ...","title":"Validering af dokumentstruktur"},{"location":"archival-versions/notes-arkivering/#kopiering-til-acastorage","text":"Hvis resultatet af dokumentvalideringen ikke n\u00f8dvendigg\u00f8r en genaflevering, kopieres hele arkiveringsversionsmappen inkl. \"_metadata\" -mapperne til AcaStorage: \u00c5bn Microsoft Azure Storage Explorer Mappen med arkiveringsversionen kopieres nu samlet eller over flere omgange ind i f\u00f8lgende mappe: MKB {din mail}/Storage Accounts/acastorage/arkver/ /AVID.AARS.3.1 |-- _metadata/ |-- ... |-- ContextDocumentation/ |-- Indices/ |-- Schemas/ |-- Tables/ |-- OriginalDocuments/ |-- _metadata/ |-- files.db |-- docCollection1.zip |-- docCollection2.zip Vigtigt Al det test- og konverteringsarbejde, som f\u00f8lger, skal arbejde med den kopi af arkiveringsversionen, som nu ligger p\u00e5 AcaStorage. Den kopi af arkiveringsversionen, som f\u00f8rst blev kopieret ind i det lokale system, skal som n\u00e6vnt forblive uber\u00f8rt, s\u00e5 vi altid kan g\u00e5 tilbage til udgangspunktet.","title":"Kopiering til AcaStorage"},{"location":"archival-versions/notes-arkivering/#identifikation-af-dokumenter","text":"Inden dokumentkonvertering foretages en grundig identifikation af de originale dokumenter. Dette g\u00f8res b\u00e5de for at fange s\u00e5 mange problemer (filendelser, tomme filer...) som muligt inden konverteringsprocessen, men ogs\u00e5 for at finde ud af, hvilket master-format en given fil skal konverteres til. Vi benytter endnu engang digiarch til at styre denne omst\u00e6ndige proces, som er n\u00e6rmere beskrevet her: dokumentation til digiarch . N\u00e5r alle fejl eller misforhold, som det har v\u00e6ret muligt at tilrette, er afhjulpet, st\u00e5r man tilbage med en filliste, hvor minimum en fil almindeligvis stadig vil v\u00e6re fejlbeh\u00e6ftet og dermed have en pronomID, som indikerer en af f\u00f8lgende fejltyper: filen er tom filen er korrupt filen er kodeordsbeskyttet filen er ikke genkendelig og dermed ikke identific\u00e9rbar","title":"Identifikation af dokumenter"},{"location":"archival-versions/notes-arkivering/#test-af-databasen","text":"Afleveringen er nu klar til at blive testet i ADA. Denne proces er beskrevet under ADA-dokumentationen , og her skal blot n\u00e6vnes, at de logs, notater m.m., som m\u00e5tte blive produceret under testen, nu findes i \"_metadata\" -mappen i roden af den afleveringen, som ligger p\u00e5 AcaStorage. N\u00e5r ADA-testen er afsluttet og arkiveringsversionen kan godkendes, er det tid til at konvertere de originale dokumenter til Stadsarkivets \"master\" -formater .","title":"Test af databasen"},{"location":"archival-versions/notes-arkivering/#konvertering-til-master-formater","text":"Vi benytter convertool til at konvertere de originale dokumenter til master-formater. Denne proces er beskrevet i convertool-dokumentationen , og her skal blot n\u00e6vnes, at de konverterede dokumenter l\u00e6gges i samme struktur som de originale dokumenter, blot i mappen \"MasterDocuments\": /AVID.AARS.3.1 |-- _metadata/ |-- ADA_log-leverand\u00f8r.rtf |-- ADA_log-test.rtf |-- test-notat.txt |-- status.txt |-- ContextDocumentation/ |-- Indices/ |-- Schemas/ |-- Tables/ |-- OriginalDocuments/ |-- _metadata/ |-- files.db |-- docCollection1/ |-- docCollection2/ |-- MasterDocuments/ |-- _metadata/ |-- files.db |-- docCollection1/ |-- docCollection2/ Filerne testes og fejlrettes med digiarch , og databasen testes med ADA . De to processer er uafh\u00e6ngige af hinanden og kan derfor k\u00f8res b\u00e5de separat og parallelt.","title":"Konvertering til master-formater"},{"location":"archival-versions/notes-arkivering/#konvertering-til-arkiv-formater","text":"N\u00e5r b\u00e5de databasen og dokumenterne er gennemarbejdet og kan godkendes, konverteres master-dokumenterne slutteligt til arkiv-formater (tiff, jpeg2000, MPEG..). Igen benyttes convertool , og igen l\u00e6gges de konverterede filer i samme struktur som de originale dokumenter, blot i mappen \"Documents\": /AVID.AARS.3.1 |-- _metadata/ |-- ADA_log-leverand\u00f8r.rtf |-- ADA_log-test.rtf |-- test-notat.txt |-- status.txt |-- ContextDocumentation/ |-- Indices/ |-- Schemas/ |-- Tables/ |-- OriginalDocuments/ |-- _metadata/ |-- files.db |-- docCollection1/ |-- docCollection2/ |-- MasterDocuments/ |-- _metadata/ |-- files.db |-- docCollection1/ |-- docCollection2/ |-- Documents/ |-- _metadata/ |-- files.db |-- docCollection1/ |-- docCollection2/","title":"Konvertering til arkiv-formater"},{"location":"archival-versions/notes-arkivering/#godkendelse-af-arkiveringsversion","text":"Efter succesrig dokumentkonvertering afsluttes processen p\u00e5 f\u00f8lgende vis: Det overordnede Notes-statusdokument p\u00e5 OneDrive opdateres med de relevante informationer Hele mappen med arkiveringsversionen (\"AVID.AARS.3.1\\\") kopieres til \"arkvers\"-mappen p\u00e5 funktionsdrevet: C:\\Users\\{az-ident}\\Aarhus kommune\\FNK-Aarhus Stadsarkiv - Dokumenter\\arkvers\\ Improvento informeres i en mail om godkendelsen Den relevante magistratsafdeling informeres i en mail om godkendelsen","title":"Godkendelse af arkiveringsversion"},{"location":"development/","text":"Development \u00b6 ...","title":"Development"},{"location":"development/#development","text":"...","title":"Development"},{"location":"development/docker/","text":"Docker \u00b6","title":"Docker"},{"location":"development/docker/#docker","text":"","title":"Docker"},{"location":"development/git/","text":"Git \u00b6","title":"Git"},{"location":"development/git/#git","text":"","title":"Git"},{"location":"development/git_workflow/","text":"Git og Github workflow \u00b6 Denne side vil gennemg\u00e5 hvordan man arbejder med Git og GitHub. Gennemgangen er delt op i tre dele: 1. En basal gennemgang af Git og GitHub 2. Hvordan man arbejder med kode fra github. Det inkluderer hvordan man cloner et repository fra GitHub, laver en ny branch til de \u00e6ndringer og modifikationer man laver, commiter og pusher ens kode op til github, og laver en pull-request, s\u00e5 koden er klar til gennemgang, inden den bliver en integreret del af projektet. 3. Hvordan man gennemg\u00e5r (reviewer) andres pull-request, kommer med kommentare og \u00e6ndringsforslag Git og GitHub \u00b6 Git er et v\u00e6rkt\u00f8j, som hj\u00e6lper med versionskontrol af softwareudvikling. Git g\u00f8r det muligt altid at havde et klart overblik over hvor man er i udviklingen af ens produkt. Den tillader ogs\u00e5 en altid at g\u00e5r tilbage til tidligere versioner af ens kode og lave forskellige 'forgreninger' (branches) af ens kode, som kan indeholde forskellige features, \u00e6ndringer og forbedringer, som ikke er klar til at blive en del af det endelige produkt. GitHub er en online tjeneste, som hoster ens Git repositories og tillader at man kan arbejde p\u00e5 samme kode samtidig. Samtidig er det muligt for andre at gennemg\u00e5 ens \u00e6ndringer, inden de bliver en del af det endelige produkt. Takeaway: Git er et v\u00e6rkt\u00f8j, som hj\u00e6lper med softwareudvikling og versionskontrol. GitHub er en online overbygning p\u00e5 Git, som g\u00f8r man kan samarbejde om at udvikle. Terminologi \u00b6 Git og GitHub har deres egen terminologi. Herunder er en kort forklaring af de vigtigste koncepter. GitHub har ogs\u00e5 selv en ordbog, som kan findes ved dette link . Repository (oftest forkortet til Repo ): Det mest essentielle element ved GitHub. Her er alle de file som er knyttet til det projekt man arbejder p\u00e5. Man kan se det som mappen projektet er gemt i. Branch: Workflow: udvikling \u00b6 Herunder er workflowet for hvordan vi arbejder p\u00e5 et repo beskrevet. Det er delt op i fem punkter, som alle beskriver en separat del af processen. Under hvert punkt er en h\u00f8jniveaubeskrivelse af selve processen. Derefter f\u00f8lger en forklaring 1. Clone \u00b6 Sikre dig at du altid clone'er fra 'Main'. (medmindre du skal arbejde videre p\u00e5 en anden branch?) N\u00e5r du har sat et repository op lokalt, opret eller skift over til den branch som du gerne vil arbejde p\u00e5. S\u00f8rg for at branchen er navngivet hensigtsm\u00e6ssigt, s\u00e5dan man hurtigt kan se hvad der udvikles p\u00e5 den. 'feature' eller 'bug_fix' fort\u00e6ller ikke nogen hvilke \u00e6ndringer der laves 2. Code \u00b6 Implementer dine \u00e6ndringer/features. Her er der flere ting man skal v\u00e6re opm\u00e6rksom p\u00e5. - S\u00f8rg for at dine \u00e6ndringer passer med den branch du er p\u00e5. Hvis du g\u00e5r i gang med at implementerer en ny feature p\u00e5 en branch der er der for at fixe en bug, s\u00e5 enten skift branch, opret en ny branch, eller opret en feature request til senere. - Husk at k\u00f8re de relevante tests, og tjek at din kode faktisk fungere - Hold din implementering p\u00e5 et minimum. N\u00e5r koden virker og opfylder alle test, s\u00e5 lad som udgangspunkt v\u00e6re med at tilf\u00f8je mere til den commit. Lav en pull-request p\u00e5 din nuv\u00e6rende version, og find derefter ud af om du skal arbejde videre p\u00e5 den branch eller en ny - S\u00f8rg for at k\u00f8re linting p\u00e5 koden, s\u00e5dan den opfylder best-practices i forhold til stil og formatering. I Python scripts g\u00f8res det ved at k\u00f8re black, flake8 og derefter mypy, hvis du har skrevet din kode med typehints (som anbefales) 3. Commit \u00b6 Commit derefter dine \u00e6ndringer. Hold dine commits sm\u00e5 og overskuelige. Hvis du laver flere commits p\u00e5 den samme pull-request, s\u00e5 lav commits gradvist. Det er langt mere overskueligt for revieweren med 3 sm\u00e5 commits end 1 stor, der \u00e6ndrer i flere forskellige aspekter af repo'et. 4. Push \u00b6 Push dine \u00e6ndringer op til GitHub. 5. Pull-request \u00b6 Opret en pull-request. Assign gerne med det samme en reviewer, s\u00e5dan personen hurtigt kan kigge p\u00e5 koden. Hvis man specifikt adresserer en issue eller feature request, s\u00e5 skriv Id'et i pull-requesten. Workflow: Review af andres kode \u00b6 Herunder beskrives hvordan man mest hensigtm\u00e6ssigt tjekker andres kode.","title":"Git og Github workflow"},{"location":"development/git_workflow/#git-og-github-workflow","text":"Denne side vil gennemg\u00e5 hvordan man arbejder med Git og GitHub. Gennemgangen er delt op i tre dele: 1. En basal gennemgang af Git og GitHub 2. Hvordan man arbejder med kode fra github. Det inkluderer hvordan man cloner et repository fra GitHub, laver en ny branch til de \u00e6ndringer og modifikationer man laver, commiter og pusher ens kode op til github, og laver en pull-request, s\u00e5 koden er klar til gennemgang, inden den bliver en integreret del af projektet. 3. Hvordan man gennemg\u00e5r (reviewer) andres pull-request, kommer med kommentare og \u00e6ndringsforslag","title":"Git og Github workflow"},{"location":"development/git_workflow/#git-og-github","text":"Git er et v\u00e6rkt\u00f8j, som hj\u00e6lper med versionskontrol af softwareudvikling. Git g\u00f8r det muligt altid at havde et klart overblik over hvor man er i udviklingen af ens produkt. Den tillader ogs\u00e5 en altid at g\u00e5r tilbage til tidligere versioner af ens kode og lave forskellige 'forgreninger' (branches) af ens kode, som kan indeholde forskellige features, \u00e6ndringer og forbedringer, som ikke er klar til at blive en del af det endelige produkt. GitHub er en online tjeneste, som hoster ens Git repositories og tillader at man kan arbejde p\u00e5 samme kode samtidig. Samtidig er det muligt for andre at gennemg\u00e5 ens \u00e6ndringer, inden de bliver en del af det endelige produkt. Takeaway: Git er et v\u00e6rkt\u00f8j, som hj\u00e6lper med softwareudvikling og versionskontrol. GitHub er en online overbygning p\u00e5 Git, som g\u00f8r man kan samarbejde om at udvikle.","title":"Git og GitHub"},{"location":"development/git_workflow/#terminologi","text":"Git og GitHub har deres egen terminologi. Herunder er en kort forklaring af de vigtigste koncepter. GitHub har ogs\u00e5 selv en ordbog, som kan findes ved dette link . Repository (oftest forkortet til Repo ): Det mest essentielle element ved GitHub. Her er alle de file som er knyttet til det projekt man arbejder p\u00e5. Man kan se det som mappen projektet er gemt i. Branch:","title":"Terminologi"},{"location":"development/git_workflow/#workflow-udvikling","text":"Herunder er workflowet for hvordan vi arbejder p\u00e5 et repo beskrevet. Det er delt op i fem punkter, som alle beskriver en separat del af processen. Under hvert punkt er en h\u00f8jniveaubeskrivelse af selve processen. Derefter f\u00f8lger en forklaring","title":"Workflow: udvikling"},{"location":"development/git_workflow/#1-clone","text":"Sikre dig at du altid clone'er fra 'Main'. (medmindre du skal arbejde videre p\u00e5 en anden branch?) N\u00e5r du har sat et repository op lokalt, opret eller skift over til den branch som du gerne vil arbejde p\u00e5. S\u00f8rg for at branchen er navngivet hensigtsm\u00e6ssigt, s\u00e5dan man hurtigt kan se hvad der udvikles p\u00e5 den. 'feature' eller 'bug_fix' fort\u00e6ller ikke nogen hvilke \u00e6ndringer der laves","title":"1. Clone"},{"location":"development/git_workflow/#2-code","text":"Implementer dine \u00e6ndringer/features. Her er der flere ting man skal v\u00e6re opm\u00e6rksom p\u00e5. - S\u00f8rg for at dine \u00e6ndringer passer med den branch du er p\u00e5. Hvis du g\u00e5r i gang med at implementerer en ny feature p\u00e5 en branch der er der for at fixe en bug, s\u00e5 enten skift branch, opret en ny branch, eller opret en feature request til senere. - Husk at k\u00f8re de relevante tests, og tjek at din kode faktisk fungere - Hold din implementering p\u00e5 et minimum. N\u00e5r koden virker og opfylder alle test, s\u00e5 lad som udgangspunkt v\u00e6re med at tilf\u00f8je mere til den commit. Lav en pull-request p\u00e5 din nuv\u00e6rende version, og find derefter ud af om du skal arbejde videre p\u00e5 den branch eller en ny - S\u00f8rg for at k\u00f8re linting p\u00e5 koden, s\u00e5dan den opfylder best-practices i forhold til stil og formatering. I Python scripts g\u00f8res det ved at k\u00f8re black, flake8 og derefter mypy, hvis du har skrevet din kode med typehints (som anbefales)","title":"2. Code"},{"location":"development/git_workflow/#3-commit","text":"Commit derefter dine \u00e6ndringer. Hold dine commits sm\u00e5 og overskuelige. Hvis du laver flere commits p\u00e5 den samme pull-request, s\u00e5 lav commits gradvist. Det er langt mere overskueligt for revieweren med 3 sm\u00e5 commits end 1 stor, der \u00e6ndrer i flere forskellige aspekter af repo'et.","title":"3. Commit"},{"location":"development/git_workflow/#4-push","text":"Push dine \u00e6ndringer op til GitHub.","title":"4. Push"},{"location":"development/git_workflow/#5-pull-request","text":"Opret en pull-request. Assign gerne med det samme en reviewer, s\u00e5dan personen hurtigt kan kigge p\u00e5 koden. Hvis man specifikt adresserer en issue eller feature request, s\u00e5 skriv Id'et i pull-requesten.","title":"5. Pull-request"},{"location":"development/git_workflow/#workflow-review-af-andres-kode","text":"Herunder beskrives hvordan man mest hensigtm\u00e6ssigt tjekker andres kode.","title":"Workflow: Review af andres kode"},{"location":"development/github/","text":"Aarhus Stadsarkiv bruger Github som udviklingsplatform. Det betyder, at kildekoden til de fleste af vores projekter ligger p\u00e5 Github, men det betyder ogs\u00e5, at vi gerne vil have fejlmeldinger, udviklings\u00f8nsker m.m. til at ligge sammen med projekterne. Oprettelse af Github-konto \u00b6 For at kunne fejlmelde problemer eller aflevere udviklings\u00f8nsker til de projekter, som medarbejderne benytter, skal du v\u00e6re oprettet som bruger af Github og knyttet stadsarkivets github-organisation. Du kan oprette dig som bruger her . Brugernavn og kode m\u00e5 du frit v\u00e6lge, men du skal bruge din arbejdsmail(...@aarhus.dk). N\u00e5r du er oprettet som bruger, skal du meddele en fra it-teamet, at du gerne vil knyttes til Aarhus Stadsarkivs github-organisation. Vi kobler dig p\u00e5 organisationen, og du kan nu foretage indberetninger p\u00e5 de projekter, som stadsarkivet har liggende p\u00e5 github. Indberetninger \u00b6 Indberetninger af fejl, udviklings\u00f8nsker, sm\u00e5\u00e6ndringer eller andet foreg\u00e5r ved at oprette s\u00e5kaldte issues p\u00e5 Github-siden for det relevante projekt. Github har selv en udf\u00f8rlig dokumentation af, hvordan man arbejder med \"issues\" , men herunder er beskrevet de mest mest almindelige brugsscenarier, som medarbejderen vil m\u00f8de. Bem\u00e6rk Det er ikke alle Stadsarkivets services og v\u00e6rkt\u00f8jer, der har en Github-side. I disse tilf\u00e6lde indberettes blot via mail. Bem\u00e6rk For at oprette issues, skal man som n\u00e6vnt v\u00e6re oprettet som bruger af github. F\u00f8lg denne vejledning , hvis du ikke allerede er oprettet. Her er indledningsvis en liste med links til indberetningssider for de mest \"popul\u00e6re\" projekter: AarhusArkivet SAM SAM-workflows AarhusWiki V\u00e6lg indberetning \u00b6 I de f\u00f8lgende afsnit vises nogle sk\u00e6rmbilleder fra forskellige projekters issue-sider. Disse er kun medtaget som eksempel, og de enkelte projekters sider kan se anderledes ud. N\u00e5r man st\u00e5r p\u00e5 et projekts issue-side, skal man klikke p\u00e5 \"Get started\" ud for det \u00f8nskede skabelon: Der \u00e5bnes nu en ny side, som skal udfyldes med de relevante informationer, der knytter sig til denne specifikke skabelon. En fejlmeddelelse ser eksempelvis cirka s\u00e5dan ud: Udfyld indberetning \u00b6 Alle issues skal have en meningsfyldt titel, men herforuden vil der for de enkelte isssue-skabeloner v\u00e6re en r\u00e6kke specifikke punkter, som man kan besvare. Ved fejlmeldinger vil vi eksempelvis gerne have beskrevet fejlen, samt angivet hvordan fejlen om muligt kan reproduceres. Bem\u00e6rk Tekstfeltet, hvori et issue skal beskrives, indeholder allerede noget template-tekst, hvis syntaks kan se lidt ukendt ud. Det hedder markdown og er bare en simpel m\u00e5de, hvorp\u00e5 man kan arbejde med basale formateringer (fed skrift, links, lister...). Hvis man er usikker p\u00e5 brugen heraf, benytter man bare den genkendelige v\u00e6rkt\u00f8jslinje over feltet: Man kan eogs\u00e5 l\u00f8bende se, hvordan ens issue kommer til at se ud, ved at klikke p\u00e5 \" Preview \"-fanen. Gem indberetning \u00b6 N\u00e5r man er f\u00e6rdig med sin beskrivelse, trykkes \" Submit new issue \". Indberetningen vil nu v\u00e6re at finde p\u00e5 listen over aktive issues, som er knyttet til AarhusArkivet: Statusopdateringer \u00b6 N\u00e5r man f\u00f8rste gang har gemt en indberetning, bliver man automatisk notificeret via mail omkring enhver \u00e6ndring til denne indberetning. Redig\u00e9r indberetning \u00b6 Redig\u00e9r issue-titlen \u00b6 Man kan altid redigere i issues, som man selv har oprettet. Hvis man \u00f8nsker at \u00e6ndre titlen p\u00e5 sin indberetning, klikker man blot p\u00e5 \" Edit \"-knappen til h\u00f8re for titlen: Redig\u00e9r issue-teksten \u00b6 Hvis man derimod \u00f8nsker at \u00e6ndre selve indholdet i indberetningen, g\u00e5r man blot ind p\u00e5 den side, som viser det \u00f8nskede issue, og klikker p\u00e5 de tre prikker over tekstfeltet og v\u00e6lger \" edit \": Foretag dine redigeringer og tryk p\u00e5 \" Update Comment \". Dine \u00e6ndringer er nu gemt. Komment\u00e9r p\u00e5 indberetning \u00b6 Det er muligt at kommentere p\u00e5 b\u00e5de egne eller andres issues. Er der tale om egne indberetninger, vil man ofte blot redigere selve indberetningen, men andre medarbejderes indberetninger har man ikke adgang til at redigere. For at kommentere p\u00e5 en indberetning, skriver man blot sin kommentar i kommentarfeltet under det aktuelle issue (og eventuelle tidligere kommentarer i tr\u00e5den): Afslut med at klikke p\u00e5 \" Comment \". Man kan ogs\u00e5 afslutte ved at klikke p\u00e5 \" Close with comment \", men det lukker indberetningen. Lukning af en indberetning, kan du l\u00e6se mere om nedenfor. Luk en indberetning \u00b6 Man kan altid lukke en af sine egne indberetninger. M\u00e5ske fordi den blev oprettet som en fejl eller er blevet l\u00f8st. N\u00e5r man lukker en indberetning, skal man huske at angive grunden hertil i kommentarfeltet inden man lukker indberetningen ved at klikke p\u00e5 \" Close with Comment \" (se ovenst\u00e5ende billede).","title":"Github"},{"location":"development/github/#oprettelse-af-github-konto","text":"For at kunne fejlmelde problemer eller aflevere udviklings\u00f8nsker til de projekter, som medarbejderne benytter, skal du v\u00e6re oprettet som bruger af Github og knyttet stadsarkivets github-organisation. Du kan oprette dig som bruger her . Brugernavn og kode m\u00e5 du frit v\u00e6lge, men du skal bruge din arbejdsmail(...@aarhus.dk). N\u00e5r du er oprettet som bruger, skal du meddele en fra it-teamet, at du gerne vil knyttes til Aarhus Stadsarkivs github-organisation. Vi kobler dig p\u00e5 organisationen, og du kan nu foretage indberetninger p\u00e5 de projekter, som stadsarkivet har liggende p\u00e5 github.","title":"Oprettelse af Github-konto"},{"location":"development/github/#indberetninger","text":"Indberetninger af fejl, udviklings\u00f8nsker, sm\u00e5\u00e6ndringer eller andet foreg\u00e5r ved at oprette s\u00e5kaldte issues p\u00e5 Github-siden for det relevante projekt. Github har selv en udf\u00f8rlig dokumentation af, hvordan man arbejder med \"issues\" , men herunder er beskrevet de mest mest almindelige brugsscenarier, som medarbejderen vil m\u00f8de. Bem\u00e6rk Det er ikke alle Stadsarkivets services og v\u00e6rkt\u00f8jer, der har en Github-side. I disse tilf\u00e6lde indberettes blot via mail. Bem\u00e6rk For at oprette issues, skal man som n\u00e6vnt v\u00e6re oprettet som bruger af github. F\u00f8lg denne vejledning , hvis du ikke allerede er oprettet. Her er indledningsvis en liste med links til indberetningssider for de mest \"popul\u00e6re\" projekter: AarhusArkivet SAM SAM-workflows AarhusWiki","title":"Indberetninger"},{"location":"development/github/#vlg-indberetning","text":"I de f\u00f8lgende afsnit vises nogle sk\u00e6rmbilleder fra forskellige projekters issue-sider. Disse er kun medtaget som eksempel, og de enkelte projekters sider kan se anderledes ud. N\u00e5r man st\u00e5r p\u00e5 et projekts issue-side, skal man klikke p\u00e5 \"Get started\" ud for det \u00f8nskede skabelon: Der \u00e5bnes nu en ny side, som skal udfyldes med de relevante informationer, der knytter sig til denne specifikke skabelon. En fejlmeddelelse ser eksempelvis cirka s\u00e5dan ud:","title":"V\u00e6lg indberetning"},{"location":"development/github/#udfyld-indberetning","text":"Alle issues skal have en meningsfyldt titel, men herforuden vil der for de enkelte isssue-skabeloner v\u00e6re en r\u00e6kke specifikke punkter, som man kan besvare. Ved fejlmeldinger vil vi eksempelvis gerne have beskrevet fejlen, samt angivet hvordan fejlen om muligt kan reproduceres. Bem\u00e6rk Tekstfeltet, hvori et issue skal beskrives, indeholder allerede noget template-tekst, hvis syntaks kan se lidt ukendt ud. Det hedder markdown og er bare en simpel m\u00e5de, hvorp\u00e5 man kan arbejde med basale formateringer (fed skrift, links, lister...). Hvis man er usikker p\u00e5 brugen heraf, benytter man bare den genkendelige v\u00e6rkt\u00f8jslinje over feltet: Man kan eogs\u00e5 l\u00f8bende se, hvordan ens issue kommer til at se ud, ved at klikke p\u00e5 \" Preview \"-fanen.","title":"Udfyld indberetning"},{"location":"development/github/#gem-indberetning","text":"N\u00e5r man er f\u00e6rdig med sin beskrivelse, trykkes \" Submit new issue \". Indberetningen vil nu v\u00e6re at finde p\u00e5 listen over aktive issues, som er knyttet til AarhusArkivet:","title":"Gem indberetning"},{"location":"development/github/#statusopdateringer","text":"N\u00e5r man f\u00f8rste gang har gemt en indberetning, bliver man automatisk notificeret via mail omkring enhver \u00e6ndring til denne indberetning.","title":"Statusopdateringer"},{"location":"development/github/#rediger-indberetning","text":"","title":"Redig\u00e9r indberetning"},{"location":"development/github/#rediger-issue-titlen","text":"Man kan altid redigere i issues, som man selv har oprettet. Hvis man \u00f8nsker at \u00e6ndre titlen p\u00e5 sin indberetning, klikker man blot p\u00e5 \" Edit \"-knappen til h\u00f8re for titlen:","title":"Redig\u00e9r issue-titlen"},{"location":"development/github/#rediger-issue-teksten","text":"Hvis man derimod \u00f8nsker at \u00e6ndre selve indholdet i indberetningen, g\u00e5r man blot ind p\u00e5 den side, som viser det \u00f8nskede issue, og klikker p\u00e5 de tre prikker over tekstfeltet og v\u00e6lger \" edit \": Foretag dine redigeringer og tryk p\u00e5 \" Update Comment \". Dine \u00e6ndringer er nu gemt.","title":"Redig\u00e9r issue-teksten"},{"location":"development/github/#kommenter-pa-indberetning","text":"Det er muligt at kommentere p\u00e5 b\u00e5de egne eller andres issues. Er der tale om egne indberetninger, vil man ofte blot redigere selve indberetningen, men andre medarbejderes indberetninger har man ikke adgang til at redigere. For at kommentere p\u00e5 en indberetning, skriver man blot sin kommentar i kommentarfeltet under det aktuelle issue (og eventuelle tidligere kommentarer i tr\u00e5den): Afslut med at klikke p\u00e5 \" Comment \". Man kan ogs\u00e5 afslutte ved at klikke p\u00e5 \" Close with comment \", men det lukker indberetningen. Lukning af en indberetning, kan du l\u00e6se mere om nedenfor.","title":"Komment\u00e9r p\u00e5 indberetning"},{"location":"development/github/#luk-en-indberetning","text":"Man kan altid lukke en af sine egne indberetninger. M\u00e5ske fordi den blev oprettet som en fejl eller er blevet l\u00f8st. N\u00e5r man lukker en indberetning, skal man huske at angive grunden hertil i kommentarfeltet inden man lukker indberetningen ved at klikke p\u00e5 \" Close with Comment \" (se ovenst\u00e5ende billede).","title":"Luk en indberetning"},{"location":"development/wsl/","text":"Windows Subsystem for Linux (WSL) \u00b6","title":"Windows Subsystem for Linux (WSL)"},{"location":"development/wsl/#windows-subsystem-for-linux-wsl","text":"","title":"Windows Subsystem for Linux (WSL)"},{"location":"development/python/","text":"How we develop with python \u00b6 download python from python homepage all python-repo use pyproject.toml and poetry (remember to add [tool.poetry.scripts] for pipx to work) black, flake8 and mypy are not added as dev-dependencies, but installed globally. write a lint-script the calls the globally installed black, flake8 and mypy commands. use github actions to check linting use pytest for testing use pipx to install all global clis: poetry black flake8 mypy renamer unarchiver digiarch symphovert pytest","title":"How we develop with python"},{"location":"development/python/#how-we-develop-with-python","text":"download python from python homepage all python-repo use pyproject.toml and poetry (remember to add [tool.poetry.scripts] for pipx to work) black, flake8 and mypy are not added as dev-dependencies, but installed globally. write a lint-script the calls the globally installed black, flake8 and mypy commands. use github actions to check linting use pytest for testing use pipx to install all global clis: poetry black flake8 mypy renamer unarchiver digiarch symphovert pytest","title":"How we develop with python"},{"location":"development/python/pyinstaller/","text":"PyInstaller \u00b6 Herunder f\u00f8lger en kort guide til PyInstaller , som p\u00e5 Aarhus Stadsarkiv bruges til at generere eksekverbare filer af forskellige v\u00e6rkt\u00f8jer. Installation \u00b6 PyInstaller skal installeres p\u00e5 lige fod med andre dependencies via poetry . Der er tale om en development dependency, og derfor er kaldet som f\u00f8lger. poetry add pyinstaller - -dev Kompilering \u00b6 N\u00e5r PyInstaller skal kompilere, skal den kaldes i det virtuelle environment, s\u00e5ledes alle dependencies kan findes. poetry run pyinstaller [OPTIONS] [ARGS] De oftest brugte optioner er -F og -w . -F angiver, at der skal kompileres til en enkelt fil, mens -w angiver windowed mode. poetry run pyinstaller -F -w [ARGS] Det er vigtigt, at PyInstaller kaldes direkte fra det directory, hvori main.py eller \u00e6kvivalent befinder sig. cd path \\ to \\ main poetry run pyinstaller -F -w main . py N\u00e5r PyInstaller har k\u00f8rt f\u00f8rste gang, genereres en .spec -fil. Denne fil kan benyttes til finpudsning af kompileringsprocessen: det er blandt andet muligt at angive specifikke ikoner mv. Hvis man beslutter sig for at bruge .spec -filen fremover, skal den under source control, og PyInstaller skal kaldes med filen som f\u00f8lger. cd path \\ to \\ specfile poetry run pyinstaller specfile . spec Debugging \u00b6 Generelt er det nemmest at debugge ved at undg\u00e5 at bruge windowed mode, og k\u00f8re den resulterende .exe -fil via PowerShell. ## debug cd path \\ to \\ main poetry run pyinstaller -F main . py dist \\ main . exe Til tider virker windowed mode ikke p\u00e5 Windows overhovedet. I s\u00e5 tilf\u00e6lde m\u00e5 man n\u00f8jes med at kompilere til \u00e9n fil, og leve med, at et lille PowerShell vindue dukker op bag programmet.","title":"PyInstaller"},{"location":"development/python/pyinstaller/#pyinstaller","text":"Herunder f\u00f8lger en kort guide til PyInstaller , som p\u00e5 Aarhus Stadsarkiv bruges til at generere eksekverbare filer af forskellige v\u00e6rkt\u00f8jer.","title":"PyInstaller"},{"location":"development/python/pyinstaller/#installation","text":"PyInstaller skal installeres p\u00e5 lige fod med andre dependencies via poetry . Der er tale om en development dependency, og derfor er kaldet som f\u00f8lger. poetry add pyinstaller - -dev","title":"Installation"},{"location":"development/python/pyinstaller/#kompilering","text":"N\u00e5r PyInstaller skal kompilere, skal den kaldes i det virtuelle environment, s\u00e5ledes alle dependencies kan findes. poetry run pyinstaller [OPTIONS] [ARGS] De oftest brugte optioner er -F og -w . -F angiver, at der skal kompileres til en enkelt fil, mens -w angiver windowed mode. poetry run pyinstaller -F -w [ARGS] Det er vigtigt, at PyInstaller kaldes direkte fra det directory, hvori main.py eller \u00e6kvivalent befinder sig. cd path \\ to \\ main poetry run pyinstaller -F -w main . py N\u00e5r PyInstaller har k\u00f8rt f\u00f8rste gang, genereres en .spec -fil. Denne fil kan benyttes til finpudsning af kompileringsprocessen: det er blandt andet muligt at angive specifikke ikoner mv. Hvis man beslutter sig for at bruge .spec -filen fremover, skal den under source control, og PyInstaller skal kaldes med filen som f\u00f8lger. cd path \\ to \\ specfile poetry run pyinstaller specfile . spec","title":"Kompilering"},{"location":"development/python/pyinstaller/#debugging","text":"Generelt er det nemmest at debugge ved at undg\u00e5 at bruge windowed mode, og k\u00f8re den resulterende .exe -fil via PowerShell. ## debug cd path \\ to \\ main poetry run pyinstaller -F main . py dist \\ main . exe Til tider virker windowed mode ikke p\u00e5 Windows overhovedet. I s\u00e5 tilf\u00e6lde m\u00e5 man n\u00f8jes med at kompilere til \u00e9n fil, og leve med, at et lille PowerShell vindue dukker op bag programmet.","title":"Debugging"},{"location":"digitization/","text":"Alt om digitaliering af analog materiale \u00b6","title":"Index"},{"location":"digitization/#alt-om-digitaliering-af-analog-materiale","text":"","title":"Alt om digitaliering af analog materiale"},{"location":"dissemination/","text":"Alt om tilg\u00e6ngeligg\u00f8relse \u00b6","title":"Index"},{"location":"dissemination/#alt-om-tilgngeliggrelse","text":"","title":"Alt om tilg\u00e6ngeligg\u00f8relse"},{"location":"diverse/","text":"Forskelligt indhold, som over tid skal tilrettes og placeres de rette steder i dokumentationsportalen.","title":"Index"},{"location":"diverse/archiving_practices/","text":"Directory naming: - Root directory MUST include AARS. in the name, e.g. AVID.AARS.[number] or AARS.[archival_number]","title":"Archiving practices"},{"location":"diverse/database_tables/","text":"Database Tables \u00b6 Files \u00b6 column required type description default id true int Primary key autoincrement_pk uuid true uuid4 Universally unique ID uuid4 file true nvarchar(max) Original file URI size true int File size in bytes puid true nvarchar(20) Original file PUID checksum true nvarchar(max) File checksum Locations \u00b6 column required type description default id true int Primary key autoincrement_pk file_id true int Foreign key (Files.id) Files.id location true nvarchar(max) File location URI PUID true nvarchar(20) PUID for file at location type true nvarchar(50) Location type E.g. main archive, statutory Conversion \u00b6 column required type description default id true int Primary key autoincrement_pk puid true nvarchar(20) PUID to convert from archival_puid true nvarchar(20) Main ACA archival PUID statutory_puid false nvarchar(20) Statutory PUID fmt/353 (TIFF)","title":"Database Tables"},{"location":"diverse/database_tables/#database-tables","text":"","title":"Database Tables"},{"location":"diverse/database_tables/#files","text":"column required type description default id true int Primary key autoincrement_pk uuid true uuid4 Universally unique ID uuid4 file true nvarchar(max) Original file URI size true int File size in bytes puid true nvarchar(20) Original file PUID checksum true nvarchar(max) File checksum","title":"Files"},{"location":"diverse/database_tables/#locations","text":"column required type description default id true int Primary key autoincrement_pk file_id true int Foreign key (Files.id) Files.id location true nvarchar(max) File location URI PUID true nvarchar(20) PUID for file at location type true nvarchar(50) Location type E.g. main archive, statutory","title":"Locations"},{"location":"diverse/database_tables/#conversion","text":"column required type description default id true int Primary key autoincrement_pk puid true nvarchar(20) PUID to convert from archival_puid true nvarchar(20) Main ACA archival PUID statutory_puid false nvarchar(20) Statutory PUID fmt/353 (TIFF)","title":"Conversion"},{"location":"diverse/framework/","text":"Framework \u00b6 This is the birdseye-view of what we need/want to do the next three years. The list differentiates between permanent services (general public, governmental, internal) and temporal services (general, governmental, internal). How and in what priority we do it, is recorded and discussed elsewhere, often on the ''Project Boards'' of the relevant repositories or directly within ''aarhusstadsarkiv''. Permanent general public services \u00b6 These are the public-facing services (sites and tools) that we have to maintain and develop further. AarhusArkivet \u00b6 Public frontend for our digital collections. Includes PostGRES with users, orders, inventory... Milestones \u00b6 Deadline Title 2021-1 Opfyldelse af WASG2 (webtilg\u00e6ngelighed) 2021-1 Flytning til Azure 2021-1 Indpakning i Docker-kontainer 2021-1 Bestillingsmodul + andre prioriterede \u00f8nsker 2021-3 S\u00f8gemaskine 2021-4 Dynamisk integration af API'er (wikis, lex.dk, matrikeldata?, digdag?) Issues and development \u00b6 Issues are tracket at aarhusstadsarkiv/aarhusarkivet/issues Smartarkivering 2.0 \u00b6 NEMID-integration, inkl. medarbejder-login, Milestones \u00b6 Deadline Title 2021-1 Ensure funding 2021-1 Hire developer 2021-1 Dockerize 2021-1 Deploy to Azure 2021-1 Formalize GDPR and permissions-setup 2021-2 Launch Issues and development \u00b6 Issues are tracket at aarhusstadsarkiv/aarhusarkivet/issues Byr\u00e5dsarkivet \u00b6 Hjemmeside. Milestones \u00b6 Deadline Title 2021-1 Opfyldelse af WASG2 (webtilg\u00e6ngelighed) 2021-1 Flytning til Azure 2021-1 Indpakning i Docker-kontainer 2021-1 Bestillingsmodul + andre prioriterede \u00f8nsker 2021-3 S\u00f8gemaskine 2021-4 Dynamisk integration af API'er (wikis, lex.dk, matrikeldata?, digdag?) Issues and development \u00b6 Issues are tracket at aarhusstadsarkiv/aarhusarkivet/issues AarhusWiki (AcaWiki) \u00b6 Flyttes til mediawiki-service? Flyttes til AarhusArkiet? Milestones \u00b6 Deadline Title 2021-1 Opfyldelse af WASG2 (webtilg\u00e6ngelighed) 2021-1 Flytning til Azure 2021-1 Indpakning i Docker-kontainer 2021-1 Bestillingsmodul + andre prioriterede \u00f8nsker 2021-3 S\u00f8gemaskine 2021-4 Dynamisk integration af API'er (wikis, lex.dk, matrikeldata?, digdag?) Issues and development \u00b6 Issues are tracket at aarhusstadsarkiv/aarhusarkivet/issues Permanent governmental services \u00b6 These are the permanent services that we have to maintain and/or develop with relation to the municipality Services regarding the production of archival versions \u00b6 Conversion, import... Services regarding test and preservation of archival versions \u00b6 Finish Notes, eliminate backlog, finish all major systems - Notesprojekt afsluttes - KMD Sag - CSC Vitae Omsorg - CSC Social - KMD fagsystemer bagkatalog gennemarbejdes Service with regards to access to municipality-data \u00b6 Blanketter og workflows, hvor magistraterne fungerer som filtre Permanent Internal services and tools \u00b6 These are our permanent internal tools used by all employees AcaDocs \u00b6 Hjemmeside med alverdens dokumentation omkring services, processer, blanketter... AcApi (metadata-store) \u00b6 Backend-PostGRES med records, entities, orders... AcaIndex (Index-store) \u00b6 Elasticsearch s\u00f8gemaskine. AcArchive (file-store) \u00b6 Digitalt arkiv for alle filer som vi er ansvarlige for. Separat blobstore for access og masterfiler. Inklusiv PostGRES med metadata om filer SAM \u00b6 Registreringssystem. Skal \u00e6ndres til webbaseret v\u00e6rkt\u00f8j og gent\u00e6nkes. COMMANDLINE TOOLS \u00b6 Konvertering ConvertTool Identifikation Digiarc Kopiering V\u00e6rkt\u00f8j til kopiering af filer efter ingest Datafetcher V\u00e6rkt\u00f8j til hentning af data fra arkiveringsversioner WORKFLOW-ENGINE \u00b6 Checksumtest QA-flows Af registreringer Imports Flow til regelm\u00e6ssig hentning af data fra eks. DBC, WikiPEdia, MTM, Import-jobs \u00b6 Kort Family Search Biblioteksbasen Bennys skanninger Poders skanninger \u00b6 Temporal Projects and services \u00b6 NotesArkivering \u00b6 DSG19 \u00b6 Machinelearning-Project \u00b6 Nina Web-based crowdsourcing-tool \u00b6 What??","title":"Framework"},{"location":"diverse/framework/#framework","text":"This is the birdseye-view of what we need/want to do the next three years. The list differentiates between permanent services (general public, governmental, internal) and temporal services (general, governmental, internal). How and in what priority we do it, is recorded and discussed elsewhere, often on the ''Project Boards'' of the relevant repositories or directly within ''aarhusstadsarkiv''.","title":"Framework"},{"location":"diverse/framework/#permanent-general-public-services","text":"These are the public-facing services (sites and tools) that we have to maintain and develop further.","title":"Permanent general public services"},{"location":"diverse/framework/#aarhusarkivet","text":"Public frontend for our digital collections. Includes PostGRES with users, orders, inventory...","title":"AarhusArkivet"},{"location":"diverse/framework/#milestones","text":"Deadline Title 2021-1 Opfyldelse af WASG2 (webtilg\u00e6ngelighed) 2021-1 Flytning til Azure 2021-1 Indpakning i Docker-kontainer 2021-1 Bestillingsmodul + andre prioriterede \u00f8nsker 2021-3 S\u00f8gemaskine 2021-4 Dynamisk integration af API'er (wikis, lex.dk, matrikeldata?, digdag?)","title":"Milestones"},{"location":"diverse/framework/#issues-and-development","text":"Issues are tracket at aarhusstadsarkiv/aarhusarkivet/issues","title":"Issues and development"},{"location":"diverse/framework/#smartarkivering-20","text":"NEMID-integration, inkl. medarbejder-login,","title":"Smartarkivering 2.0"},{"location":"diverse/framework/#milestones_1","text":"Deadline Title 2021-1 Ensure funding 2021-1 Hire developer 2021-1 Dockerize 2021-1 Deploy to Azure 2021-1 Formalize GDPR and permissions-setup 2021-2 Launch","title":"Milestones"},{"location":"diverse/framework/#issues-and-development_1","text":"Issues are tracket at aarhusstadsarkiv/aarhusarkivet/issues","title":"Issues and development"},{"location":"diverse/framework/#byradsarkivet","text":"Hjemmeside.","title":"Byr\u00e5dsarkivet"},{"location":"diverse/framework/#milestones_2","text":"Deadline Title 2021-1 Opfyldelse af WASG2 (webtilg\u00e6ngelighed) 2021-1 Flytning til Azure 2021-1 Indpakning i Docker-kontainer 2021-1 Bestillingsmodul + andre prioriterede \u00f8nsker 2021-3 S\u00f8gemaskine 2021-4 Dynamisk integration af API'er (wikis, lex.dk, matrikeldata?, digdag?)","title":"Milestones"},{"location":"diverse/framework/#issues-and-development_2","text":"Issues are tracket at aarhusstadsarkiv/aarhusarkivet/issues","title":"Issues and development"},{"location":"diverse/framework/#aarhuswiki-acawiki","text":"Flyttes til mediawiki-service? Flyttes til AarhusArkiet?","title":"AarhusWiki (AcaWiki)"},{"location":"diverse/framework/#milestones_3","text":"Deadline Title 2021-1 Opfyldelse af WASG2 (webtilg\u00e6ngelighed) 2021-1 Flytning til Azure 2021-1 Indpakning i Docker-kontainer 2021-1 Bestillingsmodul + andre prioriterede \u00f8nsker 2021-3 S\u00f8gemaskine 2021-4 Dynamisk integration af API'er (wikis, lex.dk, matrikeldata?, digdag?)","title":"Milestones"},{"location":"diverse/framework/#issues-and-development_3","text":"Issues are tracket at aarhusstadsarkiv/aarhusarkivet/issues","title":"Issues and development"},{"location":"diverse/framework/#permanent-governmental-services","text":"These are the permanent services that we have to maintain and/or develop with relation to the municipality","title":"Permanent governmental services"},{"location":"diverse/framework/#services-regarding-the-production-of-archival-versions","text":"Conversion, import...","title":"Services regarding the production of archival versions"},{"location":"diverse/framework/#services-regarding-test-and-preservation-of-archival-versions","text":"Finish Notes, eliminate backlog, finish all major systems - Notesprojekt afsluttes - KMD Sag - CSC Vitae Omsorg - CSC Social - KMD fagsystemer bagkatalog gennemarbejdes","title":"Services regarding test and preservation of archival versions"},{"location":"diverse/framework/#service-with-regards-to-access-to-municipality-data","text":"Blanketter og workflows, hvor magistraterne fungerer som filtre","title":"Service with regards to access to municipality-data"},{"location":"diverse/framework/#permanent-internal-services-and-tools","text":"These are our permanent internal tools used by all employees","title":"Permanent Internal services and tools"},{"location":"diverse/framework/#acadocs","text":"Hjemmeside med alverdens dokumentation omkring services, processer, blanketter...","title":"AcaDocs"},{"location":"diverse/framework/#acapi-metadata-store","text":"Backend-PostGRES med records, entities, orders...","title":"AcApi (metadata-store)"},{"location":"diverse/framework/#acaindex-index-store","text":"Elasticsearch s\u00f8gemaskine.","title":"AcaIndex (Index-store)"},{"location":"diverse/framework/#acarchive-file-store","text":"Digitalt arkiv for alle filer som vi er ansvarlige for. Separat blobstore for access og masterfiler. Inklusiv PostGRES med metadata om filer","title":"AcArchive (file-store)"},{"location":"diverse/framework/#sam","text":"Registreringssystem. Skal \u00e6ndres til webbaseret v\u00e6rkt\u00f8j og gent\u00e6nkes.","title":"SAM"},{"location":"diverse/framework/#commandline-tools","text":"Konvertering ConvertTool Identifikation Digiarc Kopiering V\u00e6rkt\u00f8j til kopiering af filer efter ingest Datafetcher V\u00e6rkt\u00f8j til hentning af data fra arkiveringsversioner","title":"COMMANDLINE TOOLS"},{"location":"diverse/framework/#workflow-engine","text":"Checksumtest QA-flows Af registreringer Imports Flow til regelm\u00e6ssig hentning af data fra eks. DBC, WikiPEdia, MTM,","title":"WORKFLOW-ENGINE"},{"location":"diverse/framework/#import-jobs","text":"Kort Family Search Biblioteksbasen Bennys skanninger Poders skanninger","title":"Import-jobs"},{"location":"diverse/framework/#_1","text":"","title":""},{"location":"diverse/framework/#temporal-projects-and-services","text":"","title":"Temporal Projects and services"},{"location":"diverse/framework/#notesarkivering","text":"","title":"NotesArkivering"},{"location":"diverse/framework/#dsg19","text":"","title":"DSG19"},{"location":"diverse/framework/#machinelearning-project","text":"Nina","title":"Machinelearning-Project"},{"location":"diverse/framework/#web-based-crowdsourcing-tool","text":"What??","title":"Web-based crowdsourcing-tool"},{"location":"documents/","text":"Blanketter \u00b6 aktindsigt, tavshedspligt, ophavsret, afleveringsaftale,","title":"Index"},{"location":"documents/#blanketter","text":"aktindsigt, tavshedspligt, ophavsret, afleveringsaftale,","title":"Blanketter"},{"location":"preservation/","text":"Alt om bevaring \u00b6","title":"Index"},{"location":"preservation/#alt-om-bevaring","text":"","title":"Alt om bevaring"},{"location":"processes/convert-files/","text":"Convert files \u00b6 Konvertering af indkomne original-filer fra myndigheder eller private parter er en kompleks proces, som involverer en del viden, v\u00e6rkt\u00f8jer og procestrin. 1. Identifikation af indkomne filer \u00b6 F\u00f8r alt andet skal de indkomne filer s\u00e5 vidt muligt identificeres. Dette g\u00f8res med digiarch . Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Sed sagittis eleifend rutrum Sed sagittis eleifend rutrum 2. Omd\u00f8bning af filer \u00b6 Efter identifikationsprocessen vil der almindeligvis v\u00e6re filer, der enten ikke kunne identificeres, eller hvor filendelsen enten mangler eller er uforenelig med det filformat, som digiarch har fundet. Alle tilf\u00e6lde, hvor puid ikke kunne determineres eller hvor der er mismatch til filendelsen, vil v\u00e6re oplistet i _IdentificationWarnings-viewet. Det er kun f\u00f8lgende warnings, der skal l\u00f8ses: \"Extension mismatch\" \"puid is Null\" \"Match on text only; extension mismatch\" Inden n\u00e6ste trin skal man som minimum omd\u00f8be alle komplekse filer (.msg, winmail.dat, .7z, .zip ...), som unarchiver skal udpakke. Vi beh\u00f8ver ikke identificere filerne igen umiddelbart efter omd\u00f8bning, da renamer opdaterer b\u00e5de database og filnavne. Status Problemer/mangler Roadmap Tips I db-filen kan man ikke se, hvilken extension man burde benytte. Det er til tider sv\u00e6rt, at vide, hvilken extension et givet filformat bruger. I db-filen kan man ikke se, hvilken version af et givet filformat en fil m\u00e5tte tilh\u00f8re. Det skal eventuelt bruges til at v\u00e6lge extension. Vi skal gerne have default extension ud af Siegfried. Hvordan ellers lave et dryrun? Burde renamer have et default kald, hvor alle identificerede filnavne UDEN extension blev omd\u00f8bt? Burde man k\u00f8re et dry-run, hvor alle blev omd\u00f8bt og lagt i foldere, navngivet efter deres puid? Ville speede processen op. 'rename-all' brug ctrl + z til at tilbage-navngive filer i stifinderen brug /Ex/ (regex som filterer efter stort E) som filter i DB for at filtrere filer som stadig har \"Extension mismatch\" 3. Udpak alle komplekse filer \u00b6 Brug unarchiver til at udpakke komplekse filer. Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci 4. Identific\u00e9r filer igen \u00b6 Efter unarchiver, skal digiarch k\u00f8res igen, s\u00e5 alle filer i alle underliggende mapper identificeres. Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci 5. Identific\u00e9r problematiske filformater \u00b6 Brug Jespers v\u00e6rkt\u00f8j til at identificere, hvilke filformater i indkomsten, som vi aktuelt ikke kan h\u00e5ndtere, s\u00e5 vi allerede p\u00e5 dette tidspunkt i processen ved hvor problemerne findes. Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci 6. GIS-filer skal merges \u00b6 Eter omd\u00f8bning og udpakning, skal eventuelle GIS-filer merges, s\u00e5 de identificeres og konverteres korrekt. Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci 7. K\u00f8r convertool \u00b6 convertool k\u00f8res nu for f\u00f8rste gang. Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci 8. \u00b6","title":"Konvertering af filer"},{"location":"processes/convert-files/#convert-files","text":"Konvertering af indkomne original-filer fra myndigheder eller private parter er en kompleks proces, som involverer en del viden, v\u00e6rkt\u00f8jer og procestrin.","title":"Convert files"},{"location":"processes/convert-files/#1-identifikation-af-indkomne-filer","text":"F\u00f8r alt andet skal de indkomne filer s\u00e5 vidt muligt identificeres. Dette g\u00f8res med digiarch . Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Sed sagittis eleifend rutrum Sed sagittis eleifend rutrum","title":"1. Identifikation af indkomne filer"},{"location":"processes/convert-files/#2-omdbning-af-filer","text":"Efter identifikationsprocessen vil der almindeligvis v\u00e6re filer, der enten ikke kunne identificeres, eller hvor filendelsen enten mangler eller er uforenelig med det filformat, som digiarch har fundet. Alle tilf\u00e6lde, hvor puid ikke kunne determineres eller hvor der er mismatch til filendelsen, vil v\u00e6re oplistet i _IdentificationWarnings-viewet. Det er kun f\u00f8lgende warnings, der skal l\u00f8ses: \"Extension mismatch\" \"puid is Null\" \"Match on text only; extension mismatch\" Inden n\u00e6ste trin skal man som minimum omd\u00f8be alle komplekse filer (.msg, winmail.dat, .7z, .zip ...), som unarchiver skal udpakke. Vi beh\u00f8ver ikke identificere filerne igen umiddelbart efter omd\u00f8bning, da renamer opdaterer b\u00e5de database og filnavne. Status Problemer/mangler Roadmap Tips I db-filen kan man ikke se, hvilken extension man burde benytte. Det er til tider sv\u00e6rt, at vide, hvilken extension et givet filformat bruger. I db-filen kan man ikke se, hvilken version af et givet filformat en fil m\u00e5tte tilh\u00f8re. Det skal eventuelt bruges til at v\u00e6lge extension. Vi skal gerne have default extension ud af Siegfried. Hvordan ellers lave et dryrun? Burde renamer have et default kald, hvor alle identificerede filnavne UDEN extension blev omd\u00f8bt? Burde man k\u00f8re et dry-run, hvor alle blev omd\u00f8bt og lagt i foldere, navngivet efter deres puid? Ville speede processen op. 'rename-all' brug ctrl + z til at tilbage-navngive filer i stifinderen brug /Ex/ (regex som filterer efter stort E) som filter i DB for at filtrere filer som stadig har \"Extension mismatch\"","title":"2. Omd\u00f8bning af filer"},{"location":"processes/convert-files/#3-udpak-alle-komplekse-filer","text":"Brug unarchiver til at udpakke komplekse filer. Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"3. Udpak alle komplekse filer"},{"location":"processes/convert-files/#4-identificer-filer-igen","text":"Efter unarchiver, skal digiarch k\u00f8res igen, s\u00e5 alle filer i alle underliggende mapper identificeres. Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"4. Identific\u00e9r filer igen"},{"location":"processes/convert-files/#5-identificer-problematiske-filformater","text":"Brug Jespers v\u00e6rkt\u00f8j til at identificere, hvilke filformater i indkomsten, som vi aktuelt ikke kan h\u00e5ndtere, s\u00e5 vi allerede p\u00e5 dette tidspunkt i processen ved hvor problemerne findes. Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"5. Identific\u00e9r problematiske filformater"},{"location":"processes/convert-files/#6-gis-filer-skal-merges","text":"Eter omd\u00f8bning og udpakning, skal eventuelle GIS-filer merges, s\u00e5 de identificeres og konverteres korrekt. Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"6. GIS-filer skal merges"},{"location":"processes/convert-files/#7-kr-convertool","text":"convertool k\u00f8res nu for f\u00f8rste gang. Status Problemer Mangler Erfaringer Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"7. K\u00f8r convertool"},{"location":"processes/convert-files/#8","text":"","title":"8."},{"location":"registration/","text":"Alt om registrering af arkivalier \u00b6","title":"Index"},{"location":"registration/#alt-om-registrering-af-arkivalier","text":"","title":"Alt om registrering af arkivalier"},{"location":"registration/sam/","text":"SAM er vores registreringssystem.","title":"Index"},{"location":"registration/sam/export/","text":"Eksport af metadata...","title":"Export"},{"location":"registration/sam/import/","text":"Import af metadata...","title":"Import"},{"location":"registration/sam/installation/","text":"Installation af SAM...","title":"Installation"},{"location":"registration/sam-workflows/","text":"SAM-workflows er et lille program, som blandt andet kan generere mindre billedfiler til online visninger af de digitale masterfiler, som vi registerer i SAM . Fejlmeldinger og sp\u00f8rgsm\u00e5l \u00b6 Indberetning af fejl, sp\u00f8rgsm\u00e5l eller andet foretages gennem issues, som beskrevet under brugen af Github . Her er det direkte link to issue-siden for SAM-workflows .","title":"Index"},{"location":"registration/sam-workflows/#fejlmeldinger-og-sprgsmal","text":"Indberetning af fejl, sp\u00f8rgsm\u00e5l eller andet foretages gennem issues, som beskrevet under brugen af Github . Her er det direkte link to issue-siden for SAM-workflows .","title":"Fejlmeldinger og sp\u00f8rgsm\u00e5l"},{"location":"registration/sam-workflows/generate-access-files/","text":"SAM-workflows kan aktuelt generere access-filer (jpg-filer) ud fra pdf-filer eller alle g\u00e6ngse billedformater (jpg, tif, png, gif, JPEG 2000, bmp med flere). K\u00f8rsel af Workflow \u00b6 Aktuelt er genereringen af access-filer det eneste workflow, som SAM-workflows indeholder, og man g\u00e5r derfor direkte til brugergr\u00e6nsefladen for dette workflow: Obligatoriske parametre \u00b6 For at k\u00f8re dette workflow skal man som minimum angive stien til den csv-fil, som er eksporteret fra det relevante SAM-job (' Input '-parametret), samt hvilken csv-fil resultatet af workflowet skal gemmes i (' Output '-parametret). Valgfrie parametre \u00b6 Foruden de obligatoriske parametre, er det muligt at til- eller frav\u00e6lge f\u00f8lgende tre parameter: Add watermark Ving af, hvis access-filerne skal p\u00e5f\u00f8res stadsarkivets vandm\u00e6rke Dette parameter skal almindeligvis s\u00e6ttes. Upload Ving af, hvis access-filerne ogs\u00e5 skal uploades til stadsarkivets online filserver. Hermed f\u00e5r filerne ogs\u00e5 en online adresse (url), som kan benyttes i registreringerne. Dette parameter skal almindeligvis s\u00e6ttes. Overwrite Ving af, hvis access-filerne skal overskrive eventuelle allerede uploadede filer p\u00e5 stadsarkivets online filserver. Dette parameter skal s\u00e6ttes, hvis man er sikker p\u00e5 at allerede uploadede filer skal erstattes med disse filer. Resultat af workflow \u00b6 Efter succesrig k\u00f8rsel af workflowet vil der, alt efter v\u00e6rdien af de enkelte valgfrie parametre, som minimum v\u00e6re genereret f\u00f8lgende: En csv-fil i den valgte ' Output '-mappe, som skal bruges til at re-importere i SAM, s\u00e5 access-filernes url'er kan tilf\u00f8jes de relevante registreringer. En eller flere genererede access-filer, placeret i undermapper under ark_access_store p\u00e5 stadsarkivets OneDrive-afdelingsdrev. Hvis man eksempelvis har genereret access-filer af et tif-billede med id'et 000277258, vil de relevante access-filer v\u00e6re at finde her: C:\\Users\\azkb075\\Aarhus kommune\\AFD-Aarhus Stadsarkiv - Dokumenter\\_DIGITALT_ARKIV\\ark_access_store\\000277258\\ Hvis Upload -parametret var vinget af, vil de samme access-filer nu ogs\u00e5 findes i stadsarkivets online filserver: https://acastorage.blob.core.windows.net/sam-access/000277258/000277258_m.jpg Fejl \u00b6 Der kan opst\u00e5 en r\u00e6kke fejl i forbindelse med genereringen af access-filerne, eks. manglende netv\u00e6rksforbindelse, korrumperede filer med mere. Hvis en fejl stopper k\u00f8rslen f\u00f8r den er f\u00e6rdig, er det sikkert at starte forfra med workflowet. Send gerne et skr\u00e6mdump af fejlen til it-teamet, hvis du er i tvivl om hvordan fejlbeskeden skal fortolkes eller ikke kan rette fejlen. Tip Undlad at vinge Overwrite -parametret af n\u00e5r workflowet k\u00f8res igen, s\u00e5 kun de resterende filer uploades i anden omgang.","title":"Generate access files"},{"location":"registration/sam-workflows/generate-access-files/#krsel-af-workflow","text":"Aktuelt er genereringen af access-filer det eneste workflow, som SAM-workflows indeholder, og man g\u00e5r derfor direkte til brugergr\u00e6nsefladen for dette workflow:","title":"K\u00f8rsel af Workflow"},{"location":"registration/sam-workflows/generate-access-files/#obligatoriske-parametre","text":"For at k\u00f8re dette workflow skal man som minimum angive stien til den csv-fil, som er eksporteret fra det relevante SAM-job (' Input '-parametret), samt hvilken csv-fil resultatet af workflowet skal gemmes i (' Output '-parametret).","title":"Obligatoriske parametre"},{"location":"registration/sam-workflows/generate-access-files/#valgfrie-parametre","text":"Foruden de obligatoriske parametre, er det muligt at til- eller frav\u00e6lge f\u00f8lgende tre parameter: Add watermark Ving af, hvis access-filerne skal p\u00e5f\u00f8res stadsarkivets vandm\u00e6rke Dette parameter skal almindeligvis s\u00e6ttes. Upload Ving af, hvis access-filerne ogs\u00e5 skal uploades til stadsarkivets online filserver. Hermed f\u00e5r filerne ogs\u00e5 en online adresse (url), som kan benyttes i registreringerne. Dette parameter skal almindeligvis s\u00e6ttes. Overwrite Ving af, hvis access-filerne skal overskrive eventuelle allerede uploadede filer p\u00e5 stadsarkivets online filserver. Dette parameter skal s\u00e6ttes, hvis man er sikker p\u00e5 at allerede uploadede filer skal erstattes med disse filer.","title":"Valgfrie parametre"},{"location":"registration/sam-workflows/generate-access-files/#resultat-af-workflow","text":"Efter succesrig k\u00f8rsel af workflowet vil der, alt efter v\u00e6rdien af de enkelte valgfrie parametre, som minimum v\u00e6re genereret f\u00f8lgende: En csv-fil i den valgte ' Output '-mappe, som skal bruges til at re-importere i SAM, s\u00e5 access-filernes url'er kan tilf\u00f8jes de relevante registreringer. En eller flere genererede access-filer, placeret i undermapper under ark_access_store p\u00e5 stadsarkivets OneDrive-afdelingsdrev. Hvis man eksempelvis har genereret access-filer af et tif-billede med id'et 000277258, vil de relevante access-filer v\u00e6re at finde her: C:\\Users\\azkb075\\Aarhus kommune\\AFD-Aarhus Stadsarkiv - Dokumenter\\_DIGITALT_ARKIV\\ark_access_store\\000277258\\ Hvis Upload -parametret var vinget af, vil de samme access-filer nu ogs\u00e5 findes i stadsarkivets online filserver: https://acastorage.blob.core.windows.net/sam-access/000277258/000277258_m.jpg","title":"Resultat af workflow"},{"location":"registration/sam-workflows/generate-access-files/#fejl","text":"Der kan opst\u00e5 en r\u00e6kke fejl i forbindelse med genereringen af access-filerne, eks. manglende netv\u00e6rksforbindelse, korrumperede filer med mere. Hvis en fejl stopper k\u00f8rslen f\u00f8r den er f\u00e6rdig, er det sikkert at starte forfra med workflowet. Send gerne et skr\u00e6mdump af fejlen til it-teamet, hvis du er i tvivl om hvordan fejlbeskeden skal fortolkes eller ikke kan rette fejlen. Tip Undlad at vinge Overwrite -parametret af n\u00e5r workflowet k\u00f8res igen, s\u00e5 kun de resterende filer uploades i anden omgang.","title":"Fejl"},{"location":"registration/sam-workflows/installation/","text":"SAM-workflows best\u00e5r af 1) et lille program ( sam_workflows.exe -filen) og 2) en mappe med program-filer, som begge skal v\u00e6re p\u00e5 plads f\u00f8r programmet virker. Bem\u00e6rk SAM-workflows virker kun p\u00e5 administrative Windows-PC'er, da programmet ofte skal arbejde med de filer, som findes i vores digitale arkiv. sam_workflows.exe \u00b6 Seneste udgave af sam_workflows.exe ligger altid p\u00e5 denne side , hvorfra den kan downloades. Der kr\u00e6ves ingen installationsproces, men blot at sam_workflows.exe -filen placeres et eller andet sted i din bruger-mappe: Eksempel C :\\ Users \\{ az-ident }\\ Workflows \\ sam_workflows . exe Erstat {az-ident} med dit eget. Programfilerne \u00b6 Mappen med de tilh\u00f8rende programfiler kan kun f\u00e5s ved henvendelse til it-teamet, da de blandt andet indeholder autorisationskoder til vores filservice. N\u00e5r mappen med programfiler er modtaget, skal den placeres direkte i roden af din bruger-mappe : Eksempel C :\\ Users \\{ az-ident }\\. sam_workflows \\ Bem\u00e6rk Det er vigtigt, at man ikke \u00e6ndrer navnet p\u00e5 mappen. Den skal hedde .sam_workflows med foranstillet punktum. Mappe til csv-filer \u00b6 Flere workflows arbejder med csv-filer, som henholdsvis importeres fra eller eksporteres til SAM. For mange vil det v\u00e6re nemmest at oprette en fast mappe i bruger-mappen til disse csv-filer: Eksempel C :\\ Users \\{ az-ident }\\ Workflows \\ SAM-jobs \\ Dette er ikke et krav, men en anbefaling. N\u00e5r man efterf\u00f8lgende bruger SAM til at eksportere eller importere csv-filer, vil programmet huske hvilken mappe csv-filerne tidligere er placeret i.","title":"Installation"},{"location":"registration/sam-workflows/installation/#sam_workflowsexe","text":"Seneste udgave af sam_workflows.exe ligger altid p\u00e5 denne side , hvorfra den kan downloades. Der kr\u00e6ves ingen installationsproces, men blot at sam_workflows.exe -filen placeres et eller andet sted i din bruger-mappe: Eksempel C :\\ Users \\{ az-ident }\\ Workflows \\ sam_workflows . exe Erstat {az-ident} med dit eget.","title":"sam_workflows.exe"},{"location":"registration/sam-workflows/installation/#programfilerne","text":"Mappen med de tilh\u00f8rende programfiler kan kun f\u00e5s ved henvendelse til it-teamet, da de blandt andet indeholder autorisationskoder til vores filservice. N\u00e5r mappen med programfiler er modtaget, skal den placeres direkte i roden af din bruger-mappe : Eksempel C :\\ Users \\{ az-ident }\\. sam_workflows \\ Bem\u00e6rk Det er vigtigt, at man ikke \u00e6ndrer navnet p\u00e5 mappen. Den skal hedde .sam_workflows med foranstillet punktum.","title":"Programfilerne"},{"location":"registration/sam-workflows/installation/#mappe-til-csv-filer","text":"Flere workflows arbejder med csv-filer, som henholdsvis importeres fra eller eksporteres til SAM. For mange vil det v\u00e6re nemmest at oprette en fast mappe i bruger-mappen til disse csv-filer: Eksempel C :\\ Users \\{ az-ident }\\ Workflows \\ SAM-jobs \\ Dette er ikke et krav, men en anbefaling. N\u00e5r man efterf\u00f8lgende bruger SAM til at eksportere eller importere csv-filer, vil programmet huske hvilken mappe csv-filerne tidligere er placeret i.","title":"Mappe til csv-filer"},{"location":"selection/","text":"Alt om bevaring/kassation af arkivalier \u00b6","title":"Index"},{"location":"selection/#alt-om-bevaringkassation-af-arkivalier","text":"","title":"Alt om bevaring/kassation af arkivalier"},{"location":"sites/aarhusarkivet/","text":"AarhusArkivet er den prim\u00e6re online indgang til vores samlinger. Fejlmeldinger og udviklings\u00f8nsker \u00b6 Indberetning af fejl, udviklings\u00f8nsker, sp\u00f8rgsm\u00e5l med mere foretages gennem issues, som beskrevet under brugen af Github . Teknisk information \u00b6 AarhusArkivet er aktuelt en Flask-applikation uden integreret database, som hostes p\u00e5 Heroku. Alle kald til backends foreg\u00e5r gennem et api-modul, som videresender requests til f\u00f8lgende services: Auth0 . Authentication DynamoDB (AWS). Brugerstyring og Authorization Cloudsearch (AWS). Fuldtekst s\u00f8geindeks Oaws (GCP). Registreringer af materialer og entiteter Aarhusiana (GCP). Autosuggest","title":"AarhusArkivet"},{"location":"sites/aarhusarkivet/#fejlmeldinger-og-udviklingsnsker","text":"Indberetning af fejl, udviklings\u00f8nsker, sp\u00f8rgsm\u00e5l med mere foretages gennem issues, som beskrevet under brugen af Github .","title":"Fejlmeldinger og udviklings\u00f8nsker"},{"location":"sites/aarhusarkivet/#teknisk-information","text":"AarhusArkivet er aktuelt en Flask-applikation uden integreret database, som hostes p\u00e5 Heroku. Alle kald til backends foreg\u00e5r gennem et api-modul, som videresender requests til f\u00f8lgende services: Auth0 . Authentication DynamoDB (AWS). Brugerstyring og Authorization Cloudsearch (AWS). Fuldtekst s\u00f8geindeks Oaws (GCP). Registreringer af materialer og entiteter Aarhusiana (GCP). Autosuggest","title":"Teknisk information"},{"location":"sites/aarhuswiki/","text":"","title":"AarhusWiki"},{"location":"sites/byraadsarkivet/","text":"Byr\u00e5dsarkivet \u00b6","title":"Byr\u00e5dsarkivet"},{"location":"sites/byraadsarkivet/#byradsarkivet","text":"","title":"Byr\u00e5dsarkivet"},{"location":"sites/smartarkivering/","text":"Smartarkivering \u00b6 Hentning nyt data via FTP \u00b6 Run workflow \u00b6 Process raw data \u00b6 Import to SAM \u00b6","title":"Smartarkivering"},{"location":"sites/smartarkivering/#smartarkivering","text":"","title":"Smartarkivering"},{"location":"sites/smartarkivering/#hentning-nyt-data-via-ftp","text":"","title":"Hentning nyt data via FTP"},{"location":"sites/smartarkivering/#run-workflow","text":"","title":"Run workflow"},{"location":"sites/smartarkivering/#process-raw-data","text":"","title":"Process raw data"},{"location":"sites/smartarkivering/#import-to-sam","text":"","title":"Import to SAM"},{"location":"tools/","text":"Alt om de v\u00e6rkt\u00f8jer, clis og scripts, som vi bruger.","title":"Introduktion"},{"location":"tools/chocolatey/","text":"Chocolatey \u00b6 Chocolatey er en s\u00e5kaldt package manager til Windows. Form\u00e5let er at g\u00f8re det lettere at installere og opdatere software. Installation \u00b6 Denne installationsguide er skrevet med udgangspunkt i den officielle guide . Tryk p\u00e5 Access Director Start PowerShell som administrator (h\u00f8jreklik -> K\u00f8r som administrator) K\u00f8r f\u00f8lgende kommando (kopier og inds\u00e6t i PowerShell): Set-ExecutionPolicy Bypass -Scope Process -Force ; [System.Net.ServicePointManager] :: SecurityProtocol = [System.Net.ServicePointManager] :: SecurityProtocol -bor 3072 ; iex (( New-Object System . Net . WebClient ). DownloadString ( 'https://chocolatey.org/install.ps1' )) Lad installationen k\u00f8re f\u00e6rdig Luk PowerShell og k\u00f8r en ny som administrator Skriv choco for at tjekke, at installationen er g\u00e5et som forventet Bem\u00e6rk Chocolatey skal altid bruges via en administrativ PowerShell. Programmer kan findes ved at s\u00f8ge i packages . Som eksempel installerer f\u00f8lgende kommando den seneste version af Python. choco install python Opdatering \u00b6 Alle programmer installeret via Chocolatey skal opdateres via Chocolatey, igen i en administrativ PowerShell. F\u00f8lgende kommando opdaterer alle installerede programmer. choco upgrade all Hvis man blot vil opdatere et program, skal man bare skrive navnet. Her bruges Python igen som eksempel. choco upgrade python Den officielle dokumentation af upgrade kan findes her .","title":"Chocolatey"},{"location":"tools/chocolatey/#chocolatey","text":"Chocolatey er en s\u00e5kaldt package manager til Windows. Form\u00e5let er at g\u00f8re det lettere at installere og opdatere software.","title":"Chocolatey"},{"location":"tools/chocolatey/#installation","text":"Denne installationsguide er skrevet med udgangspunkt i den officielle guide . Tryk p\u00e5 Access Director Start PowerShell som administrator (h\u00f8jreklik -> K\u00f8r som administrator) K\u00f8r f\u00f8lgende kommando (kopier og inds\u00e6t i PowerShell): Set-ExecutionPolicy Bypass -Scope Process -Force ; [System.Net.ServicePointManager] :: SecurityProtocol = [System.Net.ServicePointManager] :: SecurityProtocol -bor 3072 ; iex (( New-Object System . Net . WebClient ). DownloadString ( 'https://chocolatey.org/install.ps1' )) Lad installationen k\u00f8re f\u00e6rdig Luk PowerShell og k\u00f8r en ny som administrator Skriv choco for at tjekke, at installationen er g\u00e5et som forventet Bem\u00e6rk Chocolatey skal altid bruges via en administrativ PowerShell. Programmer kan findes ved at s\u00f8ge i packages . Som eksempel installerer f\u00f8lgende kommando den seneste version af Python. choco install python","title":"Installation"},{"location":"tools/chocolatey/#opdatering","text":"Alle programmer installeret via Chocolatey skal opdateres via Chocolatey, igen i en administrativ PowerShell. F\u00f8lgende kommando opdaterer alle installerede programmer. choco upgrade all Hvis man blot vil opdatere et program, skal man bare skrive navnet. Her bruges Python igen som eksempel. choco upgrade python Den officielle dokumentation af upgrade kan findes her .","title":"Opdatering"},{"location":"tools/convertool/","text":"Convertool \u00b6 Convertool er en CLI (Command-Line Interface), som benyttes til at konvertere filer, s\u00e5ledes de overholder Aarhus Stadsarkivs arkiveringskrav. Der l\u00e6ses fra DB-filen produceret af Digiarch . Installation \u00b6 Convertool skal installeres via releases p\u00e5 GitHub. Download f\u00f8rst den seneste .whl -fil, og install\u00e9r herefter denne via pip . Eksempel pip install - -user C :\\ Downloads \\ convertool - 0 . 3 . 5-py3-none-any . whl Bem\u00e6rk Installation via .whl -filer kr\u00e6ver, at pakken wheel er installeret. Dette skal kun foreg\u00e5 f\u00f8rste gang man har behov for at installere wheels, og det g\u00f8res som f\u00f8lger. pip install - -user wheel N\u00e5r Convertool skal opdateres, bruges igen pip med en ny .whl -fil og --upgrade . Eksempel pip install - -user - -upgrade C :\\ Downloads \\ convertool - [new version] -py3-none-any . whl Foruds\u00e6tninger \u00b6 Convertool g\u00f8r brug af Ghostscript og LibreOffice , og det er derfor vigtigt at sikre sig, at disse er installeret som beskrevet i de respektive guides. Bem\u00e6rk Det er is\u00e6r vigtigt, at de relevante Ghostscript- og LibreOffice-foldere eksisterer i brugerens PATH -milj\u00f8variabel. V\u00e6r derfor ekstra opm\u00e6rksom p\u00e5, at disse trin i installationen er udf\u00f8rt korrekt. Opbygning \u00b6 Convertool er en CLI, og skal derfor benyttes direkte i for eksempel PowerShell. CLI'en er opbygget som f\u00f8lger. convertool [OPTIONS] [ARGS] [COMMAND] Argumenter, optioner, og kommandoer er beskrevet i det f\u00f8lgende. Argumenter \u00b6 Convertool har to inputargumenter, som begge er p\u00e5kr\u00e6vede: FILES og OUTDIR . FILES skal angive stien til den files.db fil, der tidligere i processen er genereret af Digiarch , mens OUTDIR skal angive stien, hvori de konverterede filer skal gemmes. Eksempel convertool D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out [COMMAND] Convertool genererer selv en mappe baseret p\u00e5 AARS-ID'et , og det er derfor kun n\u00f8dvendigt at angive en overordnet folder i OUTDIR . Optioner \u00b6 Convertool har 4 optioner. Som udgangspunk ter disse ikke p\u00e5kr\u00e6vede, bortset fra option 4, som skal bruges hvis kommandoen (se kommandoer) replacepdf kaldes: --threshold angiver det maksimale antal fejl, der m\u00e5 ske under konvertering --help printer hj\u00e6lp --version printer versionen af Convertool --pdf_1_7 Angiver at convertool kun skal indl\u00e6se PDF 1.7 filer. Denne Option skal bruges sammen med kammandoen replacepdf for at konvertere og overskrive de PDF 1.7 filer som er tilbage efter f\u00f8rste gennemk\u00f8rsel. --threshold kan bruges, hvis man \u00f8nsker, at Convertool accepterer et andet antal fejl end standardv\u00e6rdien. Standardv\u00e6rdien udregnes som kvadratroden af det totale antal filer. Hvis f\u00e5 filer konverteres, kan det v\u00e6re fordelagtigt at s\u00e6tte --threshold til 0 , da konvertering s\u00e5 stopper, f\u00f8rste gang en fejl h\u00e6nder. Det er dog ikke anbefalet for st\u00f8rre m\u00e6ngder filer. Eksempel convertool - -threshold = 0 D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out [COMMAND] --help og --version kan som de eneste kaldes uden at angive argumenter, da de blot giver information om selve CLI'en. Eksempel convertool - -help convertool - -version Eksempel convertool - -pdf_1_7 = 1 D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out replacepdf Kommandoer \u00b6 Convertool har 3 kommandoer kaldet main , tiff og replacepdf . main Denne kommando konverterer filer til Aarhus Stadsarkivs pr\u00e6definerede Master-formater. Disse er blandt andre Open Document Text for alle Word-lignende filer, PDF/A for PDF-filer, og TIFF for billedfiler. Eksempel convertool D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out main I fremtiden skal Convertool ogs\u00e5 kunne h\u00e5ndtere konvertering af alle Master-filer til arkiveringsformater, s\u00e5ledes der kan genereres juridiske afleveringer. Dette b\u00f8r v\u00e6re en separat kommando. tiff Denne kommando konverterer Master-filer til Tagged Image File Format (TIFF) i overenstemmelse med g\u00e6ldende lovgivning. En passende bitdybe og komprimering som overholder lovgivningen bliver valgt af v\u00e6rkt\u00f8jet, og beh\u00f8ver ikke at specificeres. Syntaksen for agt bruge kommandoen er den samme som main , hvor main erstattes med tiff . replacepdf Denne kommando k\u00f8re funktionen replace fra replace_pdf.py p\u00e5 de restederende PDF 1.7 filer som indl\u00e6ses ved brug af optionen --pdf_1_7 . Da funktionen bruger GhostScript, kan den multiprocesses og k\u00f8re flere konverteringer parallelt. Et eksempel p\u00e5 brugen kan ses under beskrivelsen af --pdf_1_7 . Konvertering \u00b6 N\u00e5r Convertool s\u00e6ttes i gang med at konvertere, er der ikke umiddelbart behov for yderligere brugerinput. Konvertering tager i gennemsnit 2s/fil, og det kan derfor v\u00e6re fordelagtigt at have processen k\u00f8rende i baggrunden, mens man tager sig af andre opgaver. Bem\u00e6rk Convertool g\u00f8r meget brug af LibreOffices CLI. Det er ikke testet, hvorvidt brug af LibreOffice samtidig med konvertering kan foreg\u00e5 uden problemer. V\u00e6r derfor forsigtig, hvis LibreOffice skal benyttes sidel\u00f8bende med konvertering. Under konvertering skriver Convertool til tabellen _ConvertedFiles i den files.db , som Convertool l\u00e6ser fra. I files.db laves ogs\u00e5 et s\u00e5kaldt view, _NotConverted , der p\u00e5 brugervenlig vis angiver de filer, der endnu ikke er konverteret. _ConvertedFiles -tabellen ser ud som f\u00f8lger. _ConvertedFiles column required type description file_id true int Fremmedn\u00f8gle til Files -tabellen uuid true str Universally Unique ID 4 _NotConverted -viewet baserer sig p\u00e5 _ConvertedFiles og Files . Det ser ud som f\u00f8lger. _NotConverted column required type description id true int ID fra Files -tabellen uuid true str Universally Unique ID 4 path true str Fuld sti til filen aars_path true str Sti med rod i AARS-mappen puid false str PRONOM ID signature false str Filsignatur warning false str Advarsel, hvis relevant I afsnittet om fejlrettelser beskrives det, hvorledes _ConvertedFiles manuelt opdateres, hvis der er behov herfor. Under konvertering skrives ogs\u00e5 til en logfil, convertool.log , der kan findes i _metadata folderen under OUTDIR\\AARS-ID . Eksempel Antag, at originalfilerne D:\\filer\\AVID.AARS.3.1 bliver konverteret som f\u00f8lger. convertool D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out main _ConvertedFiles og _NotConverted kan nu findes i databasefilen D:\\filer\\AVID.AARS.3.1\\_metadata\\files.db , mens logfilen kan findes i mappen D:\\filer\\out\\AVID.AARS.3.1\\_metadata . Fejlrettelser \u00b6 Under konvertering kan forskellige fejl opst\u00e5. Disse vil typisk ikke stoppe et konverteringsjob, med mindre antallet af fejl overskrider det tilladte. Fejl opdages ved at kigge i convertool.log -filen, hvori de vil st\u00e5 som WARNING . N\u00e5r et job er afsluttet, skrives ogs\u00e5 en oversigt over antallet af fejl til sidst i log-filen. Eksempel I det f\u00f8lgende ses et uddrag af en convertool.log -fil. Succesfuld konvertering angives med INFO , fejl angives med WARNING , og til slut ses en oversigt over antal fejl. 2021-02-25 19:25:48 INFO: Starting conversion of file.pdf 2021-02-25 19:25:55 INFO: Converted file.pdf successfully. 2021-02-26 09:19:36 WARNING: Failed to convert file.tif: Failed to save file.tif as TIF with error: Error setting from dictionary 2021-02-25 19:25:55 INFO: Finished conversion of 11438 files with 15 issues, 7 of which were critical. Der skelnes mellem kritiske og ikke-kritiske fejl. Ikke-kritiske fejl er typisk timeouts fra LibreOffice -- disse indikerer, at LibreOffice ikke havde tid nok til at konvertere filen, men at filen med al sandsynlighed er velformet, og kan konverteres manuelt. Nogle gange er det ogs\u00e5 fordelagtigt at give LibreOffice en chance mere, ved at k\u00f8re konverteringsjobbet igen. N\u00e5r filer konverteres manuelt, er det vigtigt at opdatere _ConvertedFiles -tabellen, s\u00e5ledes man bevarer oversigten over, hvilke filer der er konverterede. Dette g\u00f8res ved at inds\u00e6tte den manuelt konverterede fils ID og UUID, som vist i f\u00f8lgende eksempel. Eksempel Antag, at en fil med ID 144 og UUID cd61494b-4547-43e7-97c6-adbafc6e8bd ikke er konverteret. Den fremg\u00e5r i _NotConverted som f\u00f8lger. id uuid path aars_path puid signature warning 144 cd61494b-4547-43e7-97c6-adbafc6e8bd D:\\files\\AARS.TEST\\file.tif AARS.TEST\\file.tif fmt/353 Tagged Image File Format Filen konverteres nu manuelt, og _ConvertedFiles opdateres med f\u00f8lgende SQL-statement. INSERT INTO _ConvertedFiles VALUES ( 144 , \"cd61494b-4547-43e7-97c6-adbafc6e8bd\" ) Herefter fremg\u00e5r filen ikke l\u00e6ngere i _NotConverted -viewet. Til tider kan filer ikke konverteres, fordi de viser sig at v\u00e6re korrupte eller p\u00e5 anden vis fejlbeh\u00e6ftede. Alle filer, der ikke kan eller skal konverteres, skal noteres i et dokument kaldet \"Konverteringsfejl\", og herudover skal en TIFF-fil, der forklarer den specifikke fejl, bruges som erstatning for den konverterede fil. Disse erstatningsfiler kan findes her . Til slut skal dette dokument gemmes som TIFF og fremg\u00e5 i kontekstdokumentationen. Skabelonen til dokumentet kan findes her . Eksempel Dokumentet \"Konverteringsfejl\" kan se ud som f\u00f8lger. Arbejdsgang \u00b6 Som opsummering kommer her en oversigt over arbejdsgangen med Convertool. \u00c5bn PowerShell Skriv cd sti\\til\\data f.eks. cd E:\\batch_7\\AVID.AARS.61.1 K\u00f8r convertool .\\_metadata\\files.db OUTDIR main , hvor OUTDIR f.eks. er E:\\batch_7\\out Tjek fildatabasen Tjek logfilen i _metadata\\convertool.log for WARNING s. Ved ikke-kritiske fejl som f.eks. timeout k\u00f8res convertool igen som i trin 3. Tjek database og logfil igen. Refer\u00e9r til eksemplet i fejlrettelser , hvis der skal laves manuelle rettelser. Hvis der er filer, som ikke kan konverteres, skal dette noteres i dokumentet \"Konverteringsfejl\", som beskrevet i fejlrettelser .","title":"Convertool"},{"location":"tools/convertool/#convertool","text":"Convertool er en CLI (Command-Line Interface), som benyttes til at konvertere filer, s\u00e5ledes de overholder Aarhus Stadsarkivs arkiveringskrav. Der l\u00e6ses fra DB-filen produceret af Digiarch .","title":"Convertool"},{"location":"tools/convertool/#installation","text":"Convertool skal installeres via releases p\u00e5 GitHub. Download f\u00f8rst den seneste .whl -fil, og install\u00e9r herefter denne via pip . Eksempel pip install - -user C :\\ Downloads \\ convertool - 0 . 3 . 5-py3-none-any . whl Bem\u00e6rk Installation via .whl -filer kr\u00e6ver, at pakken wheel er installeret. Dette skal kun foreg\u00e5 f\u00f8rste gang man har behov for at installere wheels, og det g\u00f8res som f\u00f8lger. pip install - -user wheel N\u00e5r Convertool skal opdateres, bruges igen pip med en ny .whl -fil og --upgrade . Eksempel pip install - -user - -upgrade C :\\ Downloads \\ convertool - [new version] -py3-none-any . whl","title":"Installation"},{"location":"tools/convertool/#forudstninger","text":"Convertool g\u00f8r brug af Ghostscript og LibreOffice , og det er derfor vigtigt at sikre sig, at disse er installeret som beskrevet i de respektive guides. Bem\u00e6rk Det er is\u00e6r vigtigt, at de relevante Ghostscript- og LibreOffice-foldere eksisterer i brugerens PATH -milj\u00f8variabel. V\u00e6r derfor ekstra opm\u00e6rksom p\u00e5, at disse trin i installationen er udf\u00f8rt korrekt.","title":"Foruds\u00e6tninger"},{"location":"tools/convertool/#opbygning","text":"Convertool er en CLI, og skal derfor benyttes direkte i for eksempel PowerShell. CLI'en er opbygget som f\u00f8lger. convertool [OPTIONS] [ARGS] [COMMAND] Argumenter, optioner, og kommandoer er beskrevet i det f\u00f8lgende.","title":"Opbygning"},{"location":"tools/convertool/#argumenter","text":"Convertool har to inputargumenter, som begge er p\u00e5kr\u00e6vede: FILES og OUTDIR . FILES skal angive stien til den files.db fil, der tidligere i processen er genereret af Digiarch , mens OUTDIR skal angive stien, hvori de konverterede filer skal gemmes. Eksempel convertool D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out [COMMAND] Convertool genererer selv en mappe baseret p\u00e5 AARS-ID'et , og det er derfor kun n\u00f8dvendigt at angive en overordnet folder i OUTDIR .","title":"Argumenter"},{"location":"tools/convertool/#optioner","text":"Convertool har 4 optioner. Som udgangspunk ter disse ikke p\u00e5kr\u00e6vede, bortset fra option 4, som skal bruges hvis kommandoen (se kommandoer) replacepdf kaldes: --threshold angiver det maksimale antal fejl, der m\u00e5 ske under konvertering --help printer hj\u00e6lp --version printer versionen af Convertool --pdf_1_7 Angiver at convertool kun skal indl\u00e6se PDF 1.7 filer. Denne Option skal bruges sammen med kammandoen replacepdf for at konvertere og overskrive de PDF 1.7 filer som er tilbage efter f\u00f8rste gennemk\u00f8rsel. --threshold kan bruges, hvis man \u00f8nsker, at Convertool accepterer et andet antal fejl end standardv\u00e6rdien. Standardv\u00e6rdien udregnes som kvadratroden af det totale antal filer. Hvis f\u00e5 filer konverteres, kan det v\u00e6re fordelagtigt at s\u00e6tte --threshold til 0 , da konvertering s\u00e5 stopper, f\u00f8rste gang en fejl h\u00e6nder. Det er dog ikke anbefalet for st\u00f8rre m\u00e6ngder filer. Eksempel convertool - -threshold = 0 D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out [COMMAND] --help og --version kan som de eneste kaldes uden at angive argumenter, da de blot giver information om selve CLI'en. Eksempel convertool - -help convertool - -version Eksempel convertool - -pdf_1_7 = 1 D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out replacepdf","title":"Optioner"},{"location":"tools/convertool/#kommandoer","text":"Convertool har 3 kommandoer kaldet main , tiff og replacepdf . main Denne kommando konverterer filer til Aarhus Stadsarkivs pr\u00e6definerede Master-formater. Disse er blandt andre Open Document Text for alle Word-lignende filer, PDF/A for PDF-filer, og TIFF for billedfiler. Eksempel convertool D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out main I fremtiden skal Convertool ogs\u00e5 kunne h\u00e5ndtere konvertering af alle Master-filer til arkiveringsformater, s\u00e5ledes der kan genereres juridiske afleveringer. Dette b\u00f8r v\u00e6re en separat kommando. tiff Denne kommando konverterer Master-filer til Tagged Image File Format (TIFF) i overenstemmelse med g\u00e6ldende lovgivning. En passende bitdybe og komprimering som overholder lovgivningen bliver valgt af v\u00e6rkt\u00f8jet, og beh\u00f8ver ikke at specificeres. Syntaksen for agt bruge kommandoen er den samme som main , hvor main erstattes med tiff . replacepdf Denne kommando k\u00f8re funktionen replace fra replace_pdf.py p\u00e5 de restederende PDF 1.7 filer som indl\u00e6ses ved brug af optionen --pdf_1_7 . Da funktionen bruger GhostScript, kan den multiprocesses og k\u00f8re flere konverteringer parallelt. Et eksempel p\u00e5 brugen kan ses under beskrivelsen af --pdf_1_7 .","title":"Kommandoer"},{"location":"tools/convertool/#konvertering","text":"N\u00e5r Convertool s\u00e6ttes i gang med at konvertere, er der ikke umiddelbart behov for yderligere brugerinput. Konvertering tager i gennemsnit 2s/fil, og det kan derfor v\u00e6re fordelagtigt at have processen k\u00f8rende i baggrunden, mens man tager sig af andre opgaver. Bem\u00e6rk Convertool g\u00f8r meget brug af LibreOffices CLI. Det er ikke testet, hvorvidt brug af LibreOffice samtidig med konvertering kan foreg\u00e5 uden problemer. V\u00e6r derfor forsigtig, hvis LibreOffice skal benyttes sidel\u00f8bende med konvertering. Under konvertering skriver Convertool til tabellen _ConvertedFiles i den files.db , som Convertool l\u00e6ser fra. I files.db laves ogs\u00e5 et s\u00e5kaldt view, _NotConverted , der p\u00e5 brugervenlig vis angiver de filer, der endnu ikke er konverteret. _ConvertedFiles -tabellen ser ud som f\u00f8lger. _ConvertedFiles column required type description file_id true int Fremmedn\u00f8gle til Files -tabellen uuid true str Universally Unique ID 4 _NotConverted -viewet baserer sig p\u00e5 _ConvertedFiles og Files . Det ser ud som f\u00f8lger. _NotConverted column required type description id true int ID fra Files -tabellen uuid true str Universally Unique ID 4 path true str Fuld sti til filen aars_path true str Sti med rod i AARS-mappen puid false str PRONOM ID signature false str Filsignatur warning false str Advarsel, hvis relevant I afsnittet om fejlrettelser beskrives det, hvorledes _ConvertedFiles manuelt opdateres, hvis der er behov herfor. Under konvertering skrives ogs\u00e5 til en logfil, convertool.log , der kan findes i _metadata folderen under OUTDIR\\AARS-ID . Eksempel Antag, at originalfilerne D:\\filer\\AVID.AARS.3.1 bliver konverteret som f\u00f8lger. convertool D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out main _ConvertedFiles og _NotConverted kan nu findes i databasefilen D:\\filer\\AVID.AARS.3.1\\_metadata\\files.db , mens logfilen kan findes i mappen D:\\filer\\out\\AVID.AARS.3.1\\_metadata .","title":"Konvertering"},{"location":"tools/convertool/#fejlrettelser","text":"Under konvertering kan forskellige fejl opst\u00e5. Disse vil typisk ikke stoppe et konverteringsjob, med mindre antallet af fejl overskrider det tilladte. Fejl opdages ved at kigge i convertool.log -filen, hvori de vil st\u00e5 som WARNING . N\u00e5r et job er afsluttet, skrives ogs\u00e5 en oversigt over antallet af fejl til sidst i log-filen. Eksempel I det f\u00f8lgende ses et uddrag af en convertool.log -fil. Succesfuld konvertering angives med INFO , fejl angives med WARNING , og til slut ses en oversigt over antal fejl. 2021-02-25 19:25:48 INFO: Starting conversion of file.pdf 2021-02-25 19:25:55 INFO: Converted file.pdf successfully. 2021-02-26 09:19:36 WARNING: Failed to convert file.tif: Failed to save file.tif as TIF with error: Error setting from dictionary 2021-02-25 19:25:55 INFO: Finished conversion of 11438 files with 15 issues, 7 of which were critical. Der skelnes mellem kritiske og ikke-kritiske fejl. Ikke-kritiske fejl er typisk timeouts fra LibreOffice -- disse indikerer, at LibreOffice ikke havde tid nok til at konvertere filen, men at filen med al sandsynlighed er velformet, og kan konverteres manuelt. Nogle gange er det ogs\u00e5 fordelagtigt at give LibreOffice en chance mere, ved at k\u00f8re konverteringsjobbet igen. N\u00e5r filer konverteres manuelt, er det vigtigt at opdatere _ConvertedFiles -tabellen, s\u00e5ledes man bevarer oversigten over, hvilke filer der er konverterede. Dette g\u00f8res ved at inds\u00e6tte den manuelt konverterede fils ID og UUID, som vist i f\u00f8lgende eksempel. Eksempel Antag, at en fil med ID 144 og UUID cd61494b-4547-43e7-97c6-adbafc6e8bd ikke er konverteret. Den fremg\u00e5r i _NotConverted som f\u00f8lger. id uuid path aars_path puid signature warning 144 cd61494b-4547-43e7-97c6-adbafc6e8bd D:\\files\\AARS.TEST\\file.tif AARS.TEST\\file.tif fmt/353 Tagged Image File Format Filen konverteres nu manuelt, og _ConvertedFiles opdateres med f\u00f8lgende SQL-statement. INSERT INTO _ConvertedFiles VALUES ( 144 , \"cd61494b-4547-43e7-97c6-adbafc6e8bd\" ) Herefter fremg\u00e5r filen ikke l\u00e6ngere i _NotConverted -viewet. Til tider kan filer ikke konverteres, fordi de viser sig at v\u00e6re korrupte eller p\u00e5 anden vis fejlbeh\u00e6ftede. Alle filer, der ikke kan eller skal konverteres, skal noteres i et dokument kaldet \"Konverteringsfejl\", og herudover skal en TIFF-fil, der forklarer den specifikke fejl, bruges som erstatning for den konverterede fil. Disse erstatningsfiler kan findes her . Til slut skal dette dokument gemmes som TIFF og fremg\u00e5 i kontekstdokumentationen. Skabelonen til dokumentet kan findes her . Eksempel Dokumentet \"Konverteringsfejl\" kan se ud som f\u00f8lger.","title":"Fejlrettelser"},{"location":"tools/convertool/#arbejdsgang","text":"Som opsummering kommer her en oversigt over arbejdsgangen med Convertool. \u00c5bn PowerShell Skriv cd sti\\til\\data f.eks. cd E:\\batch_7\\AVID.AARS.61.1 K\u00f8r convertool .\\_metadata\\files.db OUTDIR main , hvor OUTDIR f.eks. er E:\\batch_7\\out Tjek fildatabasen Tjek logfilen i _metadata\\convertool.log for WARNING s. Ved ikke-kritiske fejl som f.eks. timeout k\u00f8res convertool igen som i trin 3. Tjek database og logfil igen. Refer\u00e9r til eksemplet i fejlrettelser , hvis der skal laves manuelle rettelser. Hvis der er filer, som ikke kan konverteres, skal dette noteres i dokumentet \"Konverteringsfejl\", som beskrevet i fejlrettelser .","title":"Arbejdsgang"},{"location":"tools/digiarch/","text":"Digiarch \u00b6 Digiarch er en CLI (Command-Line Interface), som benyttes til at indeksere og identificere digitale filer, vi modtager til bevaring. CLI'en producerer en SQLite database kaldet files.db , som indeholder oversigter og informationer om de relevante processerede filer. Installation \u00b6 Digiarch er tilg\u00e6ngelig p\u00e5 PyPI og kan derfor installeres direkte via pip , s\u00e5fremt man har en fungerende Pythoninstallation. pip install - -user digiarch N\u00e5r man skal opdatere Digiarch, bruges pip med --upgrade pip install - -user - -upgrade digiarch Bem\u00e6rk pip kan ogs\u00e5 bruges uden --user . Det anbefales dog p\u00e5 det kraftigste at bruge --user , da man s\u00e5 undg\u00e5r at forurene systemets Pythonmilj\u00f8. N\u00e5r man laver brugerinstallationer p\u00e5 denne m\u00e5de, er det vigtigt at sikre sig, at man har brugerens Python-sti i sine systemmilj\u00f8variable. Denne vil typisk v\u00e6re C:\\Users\\[bruger]\\AppData\\Roaming\\Python\\Python[version]\\Scripts Foruds\u00e6tninger \u00b6 Digiarch bruger Siegfried til identifikation af filer, og det er derfor en foruds\u00e6tning for fuld brug af Digiarch, at Siegfried er installeret og tilg\u00e6ngelig i PATH p\u00e5 systemet. Dette opn\u00e5s nemmest ved at installere Siegfried via Go. Det anbefales, at Go installeres med Chocolatey som f\u00f8lger. choco install golang Bem\u00e6rk Chocolatey skal altid bruges via en administrativ PowerShell. Givet en fungerende version af Go, foreg\u00e5r installation af Siegfried som f\u00f8lger. go install github . com / richardlehane / siegfried / cmd / sf @latest sf -update Hvis Siegfried skal opdateres, foreg\u00e5r dette ogs\u00e5 gennem Go: go install github . com / richardlehane / siegfried / cmd / sf @latest sf -update Alternative installationsmetoder kan findes p\u00e5 Siegfrieds GitHub . Hvis ovenst\u00e5ende installation virker, men Siegfried ikke bliver opdateret ordentligt, kan det skyldes, at man har en manuel installation i sin PATH -milj\u00f8variabel. Placering af Siegfriedinstallationer tilg\u00e6ngelig i PATH kan findes som f\u00f8lger: where . exe sf Opbygning \u00b6 Digiarch er en CLI, og skal derfor benyttes direkte i for eksempel PowerShell. CLI'en er opbygget som f\u00f8lger. digiarch [OPTIONS] [ARGS] [COMMAND] Argumenter, optioner, og kommandoer er beskrevet i det f\u00f8lgende. Argumenter \u00b6 Digiarch har \u00e9t inputargument: stien til filerne, som skal behandles. Dette argument er p\u00e5kr\u00e6vet, og Digiarch kan k\u00f8res med kun dette som input. Det forventes, at stien har et AARS-ID . Eksempel digiarch D :\\ filer \\ AVID . AARS . 3 . 1 N\u00e5r Digiarch k\u00f8res som i ovenst\u00e5ende, indekseres filerne uden yderligere processering. Indeksering er yderligere forklaret her . Optioner \u00b6 Digiarch har tre optioner, der, som navnet antyder, ikke er p\u00e5kr\u00e6vede: --reindex genindekserer filer --help printer hj\u00e6lp --version printer versionen af Digiarch --reindex er brugbar, hvis man har lavet manuelle \u00e6ndringer i filerne, som Digiarch har indekseret. I afsnittet om fejlrettelser beskrives situationer, hvori denne option kan v\u00e6re relevant. Eksempel digiarch - -reindex D :\\ filer \\ AVID . AARS . 3 . 1 --help og --version kan som de eneste kaldes uden at angive en sti, da de blot giver information om selve CLI'en. Eksempel digiarch - -help digiarch - -version Kommandoer \u00b6 Digiarch har to kommandoer: process og fix . F\u00f8rstn\u00e6vnte processerer filerne, hvor checksum udregnes og identifikation af filformat foreg\u00e5r, mens sidstn\u00e6vnte kan fikse pr\u00e6definerede filendelsesfejl. Filidentifikation skal forel\u00e6gge, f\u00f8r fix kan finde fejl at rette. Eksempel digiarch D:\\filer\\AVID.AARS.3.1 process digiarch D:\\filer\\AVID.AARS.3.1 fix process og fix kan ogs\u00e5 kaldes i en s\u00e5kaldt chain , s\u00e5ledes man b\u00e5de kan processere og rette fejl ad \u00e9n gang. Eksempel digiarch D:\\filer\\AVID.AARS.3.1 process fix Indeksering \u00b6 Indeksering af filer er en grundl\u00e6ggende funktion i Digiarch. N\u00e5r Digiarch kaldes f\u00f8rste gang i en folder med arkiveringsparate filer, gennemg\u00e5s folderstrukturen rekursivt, og et indeks over filerne opbygges. Dette indeks gemmes i databasen files.db , som er beskrevet yderligere i afsnittet om fildatabaser . Under indeksering tjekkes ogs\u00e5, om der er tomme foldere, og om foldere indeholder flere filer, da vi typisk forventer af arkiveringsparate afleveringer, at dette ikke er tilf\u00e6ldet. Digiarch genbruger dette filindeks, n\u00e5r filerne efterf\u00f8lgende skal behandles. Det er derfor vigtigt, at indekset holdes opdateret ved eventuelle \u00e6ndringer i filstrukturen. Man kan genindeksere ved brug af optionen --reindex , som beskrevet her . Processering \u00b6 Processering af filer til digital arkivering er Digiarchs hovedfunktion. Under processering bliver der udregnet SHA-256 checksummer, og filerne bliver identificeret via Siegfried , s\u00e5ledes de kan knyttes til en PRONOM-ID . PRONOM-ID'et er centralt for det videre arbejde med filer, da det giver et entydigt svar p\u00e5, hvilken filtype, der er tale om. Under processering tjekkes ogs\u00e5 for tomme filer, som gives en fejlbeskrivelse i PRONOM-ID'et. En filidentifikation er opbygget som f\u00f8lger. PUID Signature Warning Eksempel fmt/18 Acrobat PDF 1.4 - Portable Document Format Extension mismatch I ovenst\u00e5ende tabel bruges fmt/18 som eksempel. Dette er et Acrobat PDF version 1.4 dokument. I dette tilf\u00e6lde er der ogs\u00e5 knyttet en advarsel p\u00e5, fordi filen i dette eksempel ikke har den korrekte filendelse. De fleste filer i en aflevering vil have et PUID og en signatur uden en tilknyttet advarsel. Det er derfor prim\u00e6rt vigtigt at tage h\u00e5nd om de filer, der har tilknyttede advarsler. Fildatabasen , som Digiarch genererer, indeholder derfor blandt andet brugervenlige oversigter over filer, der har tilknyttede advarsler. Fildatabase \u00b6 Som tidligere n\u00e6vnt genererer Digiarch en fildatabase, som indeholder oplysninger om de indekserede og eventuelt processerede filer. Denne database hedder files.db og befinder sig i _metadata -mappen. files.db er en SQLite database, og det kan derfor anbefales at installere DB Browser for SQLite , n\u00e5r man skal arbejde med fildatabaser fra Digiarch. I det f\u00f8lgende beskrives de tabeller og views, der eksisterer i files.db , n\u00e5r Digiarch har f\u00e6rdiggjort en k\u00f8rsel. Tabeller \u00b6 files.db f\u00f8des med fire tabeller: Files , Metadata , _EmptyDirectories , og _MultipleFiles . Sidstn\u00e6vnte er pr\u00e6fikseret med _ for at facilitere mere logisk sortering i DB Browser for SQLite. Tabellerne er bygget op som f\u00f8lger. Files Denne tabel er det prim\u00e6re filindeks, og indeholder oplysninger om alle filer fundet i filstrukturen, Digiarch behandler. column required type description id true int Prim\u00e6rn\u00f8gle uuid true str Universally Unique ID 4 path true str Fuld sti til filen checksum false str SHA-256 checksum aars_path true str Sti med rod i AARS-mappen puid false str PRONOM ID signature false str Filsignatur warning false str Advarsel, hvis relevant checksum , puid , signature , og warning bliver udfyldt under processering. Disse vil derfor v\u00e6re NULL , hvis der kun er k\u00f8rt indeksering af filer. Metadata Denne tabel indeholder en oversigt over, hvorn\u00e5r Digiarch sidst er blevet k\u00f8rt p\u00e5 de relevante filer. column required type description last_run true datetime Tidspunkt for seneste k\u00f8rsel processed_dir true str Den folder hvori Digiarch er kaldt file_count false int Antal indekserede filer total_size false str Samlet filst\u00f8rrelse _EmptyDirectories_ Denne tabel indeholder eventuelle mapper i filstrukturen, der er tomme. column required type description path true str Den fulde sti til den tomme folder _MultipleFiles_ Denne tabel indeholder eventuelle mapper i filstrukturen, der indeholder mere end \u00e9n fil. column required type description path true str Den fulde sti til folderen med flere filer Views \u00b6 files.db f\u00f8des med to views: _IdentificationWarnings og _SignatureCount . Disse er bygget op som f\u00f8lger. _IdentificationWarnings Dette view har samme opbygning som Files -tabellen, men indeholder kun de filer, der har v\u00e6rdier i warning -kolonnen. Viewet er brugbart i forbindelse med fejlrettelser. column type description id int Prim\u00e6rn\u00f8gle uuid str Universally Unique ID 4 path str Fuld sti til filen checksum str SHA-256 checksum aars_path str Sti med rod i AARS-mappen puid str PRONOM ID signature str Filsignatur warning str Advarsel _SignatureCount Dette view viser en oversigt over antallet af signaturer og PUID'er, der findes i fildatabasen. Viewet er brugbart til at vurdere, hvilke filer der skal h\u00e5ndteres, og hvorledes konvertering skal foreg\u00e5. column type description puid str PRONOM ID signature str Filsignatur count int Samlet antal Fejlrettelser \u00b6 N\u00e5r filer til arkivering er blevet indekserede og processerede, vil der typisk v\u00e6re en andel, der er fejlbeh\u00e6ftede. Der er overordnet fem typer fejl, som bliver gennemg\u00e5et i det f\u00f8lgende. Extension mismatch \u00b6 Denne fejl indikerer, at det er lykkedes at finde en filsignatur, men at den aktuelle filendelse ikke stemmer overens med den forventede. Dette kan for eksempel v\u00e6re en PDF-fil, der er gemt som .tiff . Digiarch-kommandoen fix kan med fordel bruges til at rette visse pr\u00e6definerede Extension mismatch fejl. Det er dog ikke alle fejl, fix kan rette, og man m\u00e5 derfor belave sig p\u00e5, at nogle filer skal rettes manuelt, hvis muligt. Dette g\u00f8res typisk ved at sl\u00e5 PRONOM-ID'et op i PRONOM-databasen , hvor den korrekte filendelse vil v\u00e6re at finde under \"Signatures\". Bem\u00e6rk N\u00e5r der laves manuelle rettelser af filer, skal Digiarch k\u00f8res igen med --reindex -optionen, s\u00e5ledes de opdaterede filer bliver indekseret korrekt. Match on text only; extension mismatch \u00b6 Denne fejl indikerer, at der er tale om en tekstfil, men at filendelsen ikke stemmer overens med de forventede, e.g. .txt , .csv mv. Disse filer skal manuelt inspiceres, og kan typisk gemmes som .txt p\u00e5 sikker vis, med mindre det er tydeligt, at der er tale om en anden filtype. Match on extension only \u00b6 Denne fejl bruges, n\u00e5r filsignaturen ikke er entydigt bestemt, men derimod prim\u00e6rt beror p\u00e5 filendelsen. Dette er for eksempel tilf\u00e6ldet med .csv filer, da de bytem\u00e6ssigt blot er tekstfiler, og man derfor bruger filendelsen til den endelige signatur. Der kan sagtens v\u00e6re tale om en korrekt identifikation, men det er vigtigt at forholde sig til. No match \u00b6 Denne fejl indikerer, at der ikke er fundet noget PRONOM-ID og derfor ikke nogen filsignatur. Dette kan betyde flere ting: filen er korrupt, filen er gemt med fejl men stadig konverterbar, eller filtypen findes ikke i PRONOM-databasen. I alle tilf\u00e6lde er der behov for manuel inspektion. Bem\u00e6rk Til tider er PDF-filer gemt forkert p\u00e5 en m\u00e5de, hvor der er en masse tomme bytes efter %EOF -signaturen til sidst i filen. Disse filer kan typisk reddes ved at blive \u00e5bnet i en PDF-viewer og gemt igen, hvorefter de tomme bytes er v\u00e6k. Hvis en fil viser sig at v\u00e6re korrupt, kan man med fordel tildele den PUID'et aca-error/2 med signaturen File is corrupt . Hermed kan Convertool automatisk indf\u00f8re erstatningsfiler under konvertering. Det er vigtigt at dokumentere korrupte filer i Konverteringsfejl -dokumentet. Empty file \u00b6 Denne fejl indikerer, at filen er tom, og tomme filer har per definition ikke en gyldig filsignatur. Tomme filer skal dokumenteres i Konverteringsfejl -dokumentet, men man beh\u00f8ver ikke g\u00f8re yderligere; Convertool indf\u00f8rer automatisk erstatningsfiler. Arbejdsgang \u00b6 Som opsummering kommer her en oversigt over arbejdsgangen med Digiarch. \u00c5bn PowerShell Skriv cd sti\\til\\data f.eks. cd E:\\batch_7\\AVID.AARS.61.1 K\u00f8r digiarch . process Tjek fildatabasen files.db som befinder sig i _metadata -mappen Hvis rettelse af filendelsesfejl er n\u00f8dvendigt, k\u00f8r da digiarch . fix Tjek fildatabasen igen Hvis der laves manuelle rettelser, k\u00f8r da digiarch --reindex . process","title":"Digiarch"},{"location":"tools/digiarch/#digiarch","text":"Digiarch er en CLI (Command-Line Interface), som benyttes til at indeksere og identificere digitale filer, vi modtager til bevaring. CLI'en producerer en SQLite database kaldet files.db , som indeholder oversigter og informationer om de relevante processerede filer.","title":"Digiarch"},{"location":"tools/digiarch/#installation","text":"Digiarch er tilg\u00e6ngelig p\u00e5 PyPI og kan derfor installeres direkte via pip , s\u00e5fremt man har en fungerende Pythoninstallation. pip install - -user digiarch N\u00e5r man skal opdatere Digiarch, bruges pip med --upgrade pip install - -user - -upgrade digiarch Bem\u00e6rk pip kan ogs\u00e5 bruges uden --user . Det anbefales dog p\u00e5 det kraftigste at bruge --user , da man s\u00e5 undg\u00e5r at forurene systemets Pythonmilj\u00f8. N\u00e5r man laver brugerinstallationer p\u00e5 denne m\u00e5de, er det vigtigt at sikre sig, at man har brugerens Python-sti i sine systemmilj\u00f8variable. Denne vil typisk v\u00e6re C:\\Users\\[bruger]\\AppData\\Roaming\\Python\\Python[version]\\Scripts","title":"Installation"},{"location":"tools/digiarch/#forudstninger","text":"Digiarch bruger Siegfried til identifikation af filer, og det er derfor en foruds\u00e6tning for fuld brug af Digiarch, at Siegfried er installeret og tilg\u00e6ngelig i PATH p\u00e5 systemet. Dette opn\u00e5s nemmest ved at installere Siegfried via Go. Det anbefales, at Go installeres med Chocolatey som f\u00f8lger. choco install golang Bem\u00e6rk Chocolatey skal altid bruges via en administrativ PowerShell. Givet en fungerende version af Go, foreg\u00e5r installation af Siegfried som f\u00f8lger. go install github . com / richardlehane / siegfried / cmd / sf @latest sf -update Hvis Siegfried skal opdateres, foreg\u00e5r dette ogs\u00e5 gennem Go: go install github . com / richardlehane / siegfried / cmd / sf @latest sf -update Alternative installationsmetoder kan findes p\u00e5 Siegfrieds GitHub . Hvis ovenst\u00e5ende installation virker, men Siegfried ikke bliver opdateret ordentligt, kan det skyldes, at man har en manuel installation i sin PATH -milj\u00f8variabel. Placering af Siegfriedinstallationer tilg\u00e6ngelig i PATH kan findes som f\u00f8lger: where . exe sf","title":"Foruds\u00e6tninger"},{"location":"tools/digiarch/#opbygning","text":"Digiarch er en CLI, og skal derfor benyttes direkte i for eksempel PowerShell. CLI'en er opbygget som f\u00f8lger. digiarch [OPTIONS] [ARGS] [COMMAND] Argumenter, optioner, og kommandoer er beskrevet i det f\u00f8lgende.","title":"Opbygning"},{"location":"tools/digiarch/#argumenter","text":"Digiarch har \u00e9t inputargument: stien til filerne, som skal behandles. Dette argument er p\u00e5kr\u00e6vet, og Digiarch kan k\u00f8res med kun dette som input. Det forventes, at stien har et AARS-ID . Eksempel digiarch D :\\ filer \\ AVID . AARS . 3 . 1 N\u00e5r Digiarch k\u00f8res som i ovenst\u00e5ende, indekseres filerne uden yderligere processering. Indeksering er yderligere forklaret her .","title":"Argumenter"},{"location":"tools/digiarch/#optioner","text":"Digiarch har tre optioner, der, som navnet antyder, ikke er p\u00e5kr\u00e6vede: --reindex genindekserer filer --help printer hj\u00e6lp --version printer versionen af Digiarch --reindex er brugbar, hvis man har lavet manuelle \u00e6ndringer i filerne, som Digiarch har indekseret. I afsnittet om fejlrettelser beskrives situationer, hvori denne option kan v\u00e6re relevant. Eksempel digiarch - -reindex D :\\ filer \\ AVID . AARS . 3 . 1 --help og --version kan som de eneste kaldes uden at angive en sti, da de blot giver information om selve CLI'en. Eksempel digiarch - -help digiarch - -version","title":"Optioner"},{"location":"tools/digiarch/#kommandoer","text":"Digiarch har to kommandoer: process og fix . F\u00f8rstn\u00e6vnte processerer filerne, hvor checksum udregnes og identifikation af filformat foreg\u00e5r, mens sidstn\u00e6vnte kan fikse pr\u00e6definerede filendelsesfejl. Filidentifikation skal forel\u00e6gge, f\u00f8r fix kan finde fejl at rette. Eksempel digiarch D:\\filer\\AVID.AARS.3.1 process digiarch D:\\filer\\AVID.AARS.3.1 fix process og fix kan ogs\u00e5 kaldes i en s\u00e5kaldt chain , s\u00e5ledes man b\u00e5de kan processere og rette fejl ad \u00e9n gang. Eksempel digiarch D:\\filer\\AVID.AARS.3.1 process fix","title":"Kommandoer"},{"location":"tools/digiarch/#indeksering","text":"Indeksering af filer er en grundl\u00e6ggende funktion i Digiarch. N\u00e5r Digiarch kaldes f\u00f8rste gang i en folder med arkiveringsparate filer, gennemg\u00e5s folderstrukturen rekursivt, og et indeks over filerne opbygges. Dette indeks gemmes i databasen files.db , som er beskrevet yderligere i afsnittet om fildatabaser . Under indeksering tjekkes ogs\u00e5, om der er tomme foldere, og om foldere indeholder flere filer, da vi typisk forventer af arkiveringsparate afleveringer, at dette ikke er tilf\u00e6ldet. Digiarch genbruger dette filindeks, n\u00e5r filerne efterf\u00f8lgende skal behandles. Det er derfor vigtigt, at indekset holdes opdateret ved eventuelle \u00e6ndringer i filstrukturen. Man kan genindeksere ved brug af optionen --reindex , som beskrevet her .","title":"Indeksering"},{"location":"tools/digiarch/#processering","text":"Processering af filer til digital arkivering er Digiarchs hovedfunktion. Under processering bliver der udregnet SHA-256 checksummer, og filerne bliver identificeret via Siegfried , s\u00e5ledes de kan knyttes til en PRONOM-ID . PRONOM-ID'et er centralt for det videre arbejde med filer, da det giver et entydigt svar p\u00e5, hvilken filtype, der er tale om. Under processering tjekkes ogs\u00e5 for tomme filer, som gives en fejlbeskrivelse i PRONOM-ID'et. En filidentifikation er opbygget som f\u00f8lger. PUID Signature Warning Eksempel fmt/18 Acrobat PDF 1.4 - Portable Document Format Extension mismatch I ovenst\u00e5ende tabel bruges fmt/18 som eksempel. Dette er et Acrobat PDF version 1.4 dokument. I dette tilf\u00e6lde er der ogs\u00e5 knyttet en advarsel p\u00e5, fordi filen i dette eksempel ikke har den korrekte filendelse. De fleste filer i en aflevering vil have et PUID og en signatur uden en tilknyttet advarsel. Det er derfor prim\u00e6rt vigtigt at tage h\u00e5nd om de filer, der har tilknyttede advarsler. Fildatabasen , som Digiarch genererer, indeholder derfor blandt andet brugervenlige oversigter over filer, der har tilknyttede advarsler.","title":"Processering"},{"location":"tools/digiarch/#fildatabase","text":"Som tidligere n\u00e6vnt genererer Digiarch en fildatabase, som indeholder oplysninger om de indekserede og eventuelt processerede filer. Denne database hedder files.db og befinder sig i _metadata -mappen. files.db er en SQLite database, og det kan derfor anbefales at installere DB Browser for SQLite , n\u00e5r man skal arbejde med fildatabaser fra Digiarch. I det f\u00f8lgende beskrives de tabeller og views, der eksisterer i files.db , n\u00e5r Digiarch har f\u00e6rdiggjort en k\u00f8rsel.","title":"Fildatabase"},{"location":"tools/digiarch/#tabeller","text":"files.db f\u00f8des med fire tabeller: Files , Metadata , _EmptyDirectories , og _MultipleFiles . Sidstn\u00e6vnte er pr\u00e6fikseret med _ for at facilitere mere logisk sortering i DB Browser for SQLite. Tabellerne er bygget op som f\u00f8lger. Files Denne tabel er det prim\u00e6re filindeks, og indeholder oplysninger om alle filer fundet i filstrukturen, Digiarch behandler. column required type description id true int Prim\u00e6rn\u00f8gle uuid true str Universally Unique ID 4 path true str Fuld sti til filen checksum false str SHA-256 checksum aars_path true str Sti med rod i AARS-mappen puid false str PRONOM ID signature false str Filsignatur warning false str Advarsel, hvis relevant checksum , puid , signature , og warning bliver udfyldt under processering. Disse vil derfor v\u00e6re NULL , hvis der kun er k\u00f8rt indeksering af filer. Metadata Denne tabel indeholder en oversigt over, hvorn\u00e5r Digiarch sidst er blevet k\u00f8rt p\u00e5 de relevante filer. column required type description last_run true datetime Tidspunkt for seneste k\u00f8rsel processed_dir true str Den folder hvori Digiarch er kaldt file_count false int Antal indekserede filer total_size false str Samlet filst\u00f8rrelse _EmptyDirectories_ Denne tabel indeholder eventuelle mapper i filstrukturen, der er tomme. column required type description path true str Den fulde sti til den tomme folder _MultipleFiles_ Denne tabel indeholder eventuelle mapper i filstrukturen, der indeholder mere end \u00e9n fil. column required type description path true str Den fulde sti til folderen med flere filer","title":"Tabeller"},{"location":"tools/digiarch/#views","text":"files.db f\u00f8des med to views: _IdentificationWarnings og _SignatureCount . Disse er bygget op som f\u00f8lger. _IdentificationWarnings Dette view har samme opbygning som Files -tabellen, men indeholder kun de filer, der har v\u00e6rdier i warning -kolonnen. Viewet er brugbart i forbindelse med fejlrettelser. column type description id int Prim\u00e6rn\u00f8gle uuid str Universally Unique ID 4 path str Fuld sti til filen checksum str SHA-256 checksum aars_path str Sti med rod i AARS-mappen puid str PRONOM ID signature str Filsignatur warning str Advarsel _SignatureCount Dette view viser en oversigt over antallet af signaturer og PUID'er, der findes i fildatabasen. Viewet er brugbart til at vurdere, hvilke filer der skal h\u00e5ndteres, og hvorledes konvertering skal foreg\u00e5. column type description puid str PRONOM ID signature str Filsignatur count int Samlet antal","title":"Views"},{"location":"tools/digiarch/#fejlrettelser","text":"N\u00e5r filer til arkivering er blevet indekserede og processerede, vil der typisk v\u00e6re en andel, der er fejlbeh\u00e6ftede. Der er overordnet fem typer fejl, som bliver gennemg\u00e5et i det f\u00f8lgende.","title":"Fejlrettelser"},{"location":"tools/digiarch/#extension-mismatch","text":"Denne fejl indikerer, at det er lykkedes at finde en filsignatur, men at den aktuelle filendelse ikke stemmer overens med den forventede. Dette kan for eksempel v\u00e6re en PDF-fil, der er gemt som .tiff . Digiarch-kommandoen fix kan med fordel bruges til at rette visse pr\u00e6definerede Extension mismatch fejl. Det er dog ikke alle fejl, fix kan rette, og man m\u00e5 derfor belave sig p\u00e5, at nogle filer skal rettes manuelt, hvis muligt. Dette g\u00f8res typisk ved at sl\u00e5 PRONOM-ID'et op i PRONOM-databasen , hvor den korrekte filendelse vil v\u00e6re at finde under \"Signatures\". Bem\u00e6rk N\u00e5r der laves manuelle rettelser af filer, skal Digiarch k\u00f8res igen med --reindex -optionen, s\u00e5ledes de opdaterede filer bliver indekseret korrekt.","title":"Extension mismatch"},{"location":"tools/digiarch/#match-on-text-only-extension-mismatch","text":"Denne fejl indikerer, at der er tale om en tekstfil, men at filendelsen ikke stemmer overens med de forventede, e.g. .txt , .csv mv. Disse filer skal manuelt inspiceres, og kan typisk gemmes som .txt p\u00e5 sikker vis, med mindre det er tydeligt, at der er tale om en anden filtype.","title":"Match on text only; extension mismatch"},{"location":"tools/digiarch/#match-on-extension-only","text":"Denne fejl bruges, n\u00e5r filsignaturen ikke er entydigt bestemt, men derimod prim\u00e6rt beror p\u00e5 filendelsen. Dette er for eksempel tilf\u00e6ldet med .csv filer, da de bytem\u00e6ssigt blot er tekstfiler, og man derfor bruger filendelsen til den endelige signatur. Der kan sagtens v\u00e6re tale om en korrekt identifikation, men det er vigtigt at forholde sig til.","title":"Match on extension only"},{"location":"tools/digiarch/#no-match","text":"Denne fejl indikerer, at der ikke er fundet noget PRONOM-ID og derfor ikke nogen filsignatur. Dette kan betyde flere ting: filen er korrupt, filen er gemt med fejl men stadig konverterbar, eller filtypen findes ikke i PRONOM-databasen. I alle tilf\u00e6lde er der behov for manuel inspektion. Bem\u00e6rk Til tider er PDF-filer gemt forkert p\u00e5 en m\u00e5de, hvor der er en masse tomme bytes efter %EOF -signaturen til sidst i filen. Disse filer kan typisk reddes ved at blive \u00e5bnet i en PDF-viewer og gemt igen, hvorefter de tomme bytes er v\u00e6k. Hvis en fil viser sig at v\u00e6re korrupt, kan man med fordel tildele den PUID'et aca-error/2 med signaturen File is corrupt . Hermed kan Convertool automatisk indf\u00f8re erstatningsfiler under konvertering. Det er vigtigt at dokumentere korrupte filer i Konverteringsfejl -dokumentet.","title":"No match"},{"location":"tools/digiarch/#empty-file","text":"Denne fejl indikerer, at filen er tom, og tomme filer har per definition ikke en gyldig filsignatur. Tomme filer skal dokumenteres i Konverteringsfejl -dokumentet, men man beh\u00f8ver ikke g\u00f8re yderligere; Convertool indf\u00f8rer automatisk erstatningsfiler.","title":"Empty file"},{"location":"tools/digiarch/#arbejdsgang","text":"Som opsummering kommer her en oversigt over arbejdsgangen med Digiarch. \u00c5bn PowerShell Skriv cd sti\\til\\data f.eks. cd E:\\batch_7\\AVID.AARS.61.1 K\u00f8r digiarch . process Tjek fildatabasen files.db som befinder sig i _metadata -mappen Hvis rettelse af filendelsesfejl er n\u00f8dvendigt, k\u00f8r da digiarch . fix Tjek fildatabasen igen Hvis der laves manuelle rettelser, k\u00f8r da digiarch --reindex . process","title":"Arbejdsgang"},{"location":"tools/filezilla/","text":"Bekriver arbejdet med FileZilla.","title":"FileZilla"},{"location":"tools/ghostscript/","text":"Ghostscript \u00b6 Ghostscript er en s\u00e5kaldt interpreter til PostScript-sproget og PDF-filer. Et typisk brugsscenarie p\u00e5 Aarhus Stadsarkiv er konvertering af PDF'er til PDF/A-format. Installation \u00b6 Ghostscript kan installeres via Chocolatey choco install ghostscript . app eller via download af en .exe -fil her . Husk Chocolatey skal altid bruges via en administrativ PowerShell. Systemmilj\u00f8variable \u00b6 Det er n\u00f8dvendigt at tilf\u00f8je bin -folderen i installationslokationen til brugeres PATH -milj\u00f8variabel. Den typiske sti er C:\\Program Files\\gs\\gs[version]\\bin . Eksempel Antag, at Ghostscript version 9.53.3 er installeret. F\u00f8lgende sti skal nu tilf\u00f8jes til PATH . C :\\ Program Files \\ gs \\ gs9 . 53 . 3 \\ bin Systemmilj\u00f8variable opdateres som f\u00f8lger. Find indstillingen \"Rediger systemmilj\u00f8variablerne\" Du kommer nu ind i \"Egenskaber for system\". Tryk her p\u00e5 \"Milj\u00f8variabler\". Find Path i milj\u00f8variabler og tryk \"rediger\". Tryk p\u00e5 \"Ny\" og tilf\u00f8j den \u00f8nskede sti.","title":"Ghostscript"},{"location":"tools/ghostscript/#ghostscript","text":"Ghostscript er en s\u00e5kaldt interpreter til PostScript-sproget og PDF-filer. Et typisk brugsscenarie p\u00e5 Aarhus Stadsarkiv er konvertering af PDF'er til PDF/A-format.","title":"Ghostscript"},{"location":"tools/ghostscript/#installation","text":"Ghostscript kan installeres via Chocolatey choco install ghostscript . app eller via download af en .exe -fil her . Husk Chocolatey skal altid bruges via en administrativ PowerShell.","title":"Installation"},{"location":"tools/ghostscript/#systemmiljvariable","text":"Det er n\u00f8dvendigt at tilf\u00f8je bin -folderen i installationslokationen til brugeres PATH -milj\u00f8variabel. Den typiske sti er C:\\Program Files\\gs\\gs[version]\\bin . Eksempel Antag, at Ghostscript version 9.53.3 er installeret. F\u00f8lgende sti skal nu tilf\u00f8jes til PATH . C :\\ Program Files \\ gs \\ gs9 . 53 . 3 \\ bin Systemmilj\u00f8variable opdateres som f\u00f8lger. Find indstillingen \"Rediger systemmilj\u00f8variablerne\" Du kommer nu ind i \"Egenskaber for system\". Tryk her p\u00e5 \"Milj\u00f8variabler\". Find Path i milj\u00f8variabler og tryk \"rediger\". Tryk p\u00e5 \"Ny\" og tilf\u00f8j den \u00f8nskede sti.","title":"Systemmilj\u00f8variable"},{"location":"tools/libreoffice/","text":"LibreOffice \u00b6 LibreOffice er et office-program ligesom Microsoft Office. P\u00e5 Aarhus Stadsarkiv bruges LibreOffice prim\u00e6rt til at producere Open Document-versioner af Microsoft Office-filer. Installation \u00b6 LibreOffice kan installeres via Chocolatey choco install libreoffice-fresh eller via download af en .exe -fil her . Husk Chocolatey skal altid bruges via en administrativ PowerShell. Systemmilj\u00f8variable \u00b6 Det er n\u00f8dvendigt at tilf\u00f8je program -folderen i installationslokationen til brugeres PATH -milj\u00f8variabel. Den typiske sti er C:\\Program Files\\LibreOffice\\program . Systemmilj\u00f8variable opdateres som f\u00f8lger. Find indstillingen \"Rediger systemmilj\u00f8variablerne\" Du kommer nu ind i \"Egenskaber for system\". Tryk her p\u00e5 \"Milj\u00f8variabler\". Find Path i milj\u00f8variabler og tryk \"rediger\". Tryk p\u00e5 \"Ny\" og tilf\u00f8j den \u00f8nskede sti.","title":"LibreOffice"},{"location":"tools/libreoffice/#libreoffice","text":"LibreOffice er et office-program ligesom Microsoft Office. P\u00e5 Aarhus Stadsarkiv bruges LibreOffice prim\u00e6rt til at producere Open Document-versioner af Microsoft Office-filer.","title":"LibreOffice"},{"location":"tools/libreoffice/#installation","text":"LibreOffice kan installeres via Chocolatey choco install libreoffice-fresh eller via download af en .exe -fil her . Husk Chocolatey skal altid bruges via en administrativ PowerShell.","title":"Installation"},{"location":"tools/libreoffice/#systemmiljvariable","text":"Det er n\u00f8dvendigt at tilf\u00f8je program -folderen i installationslokationen til brugeres PATH -milj\u00f8variabel. Den typiske sti er C:\\Program Files\\LibreOffice\\program . Systemmilj\u00f8variable opdateres som f\u00f8lger. Find indstillingen \"Rediger systemmilj\u00f8variablerne\" Du kommer nu ind i \"Egenskaber for system\". Tryk her p\u00e5 \"Milj\u00f8variabler\". Find Path i milj\u00f8variabler og tryk \"rediger\". Tryk p\u00e5 \"Ny\" og tilf\u00f8j den \u00f8nskede sti.","title":"Systemmilj\u00f8variable"},{"location":"tools/renamer/","text":"Renamer \u00b6 renamer er et commandline v\u00e6rkt\u00f8j til omd\u00f8bning af filer. Oftest brugt i forbindelse med konverteringsprocesser, hvor filer med manglende eller fejlagtig filendelse ofte vil skabe problemer i den senere konverteringsproces.","title":"Renamer"},{"location":"tools/renamer/#renamer","text":"renamer er et commandline v\u00e6rkt\u00f8j til omd\u00f8bning af filer. Oftest brugt i forbindelse med konverteringsprocesser, hvor filer med manglende eller fejlagtig filendelse ofte vil skabe problemer i den senere konverteringsproces.","title":"Renamer"},{"location":"tools/symphovert/","text":"Symphovert \u00b6 Symphovert er en CLI (Command-Line Interface), som benyttes til at konvertere filer, s\u00e5ledes de overholder Aarhus Stadsarkivs arkiveringskrav. Der l\u00e6ses fra DB-filen produceret af Digiarch . Installation \u00b6 Symphovert skal installeres via releases p\u00e5 GitHub. Download f\u00f8rst den seneste .whl -fil, og install\u00e9r herefter denne via pip . Eksempel pip install - -user C :\\ Downloads \\ symphovert - 0 . 2 . 1-py3-none-any . whl Bem\u00e6rk Installation via .whl -filer kr\u00e6ver, at pakken wheel er installeret. Dette skal kun foreg\u00e5 f\u00f8rste gang man har behov for at installere wheels, og det g\u00f8res som f\u00f8lger. pip install - -user wheel N\u00e5r Symphovert skal opdateres, bruges igen pip med en ny .whl -fil og --upgrade . Eksempel pip install - -user - -upgrade C :\\ Downloads \\ symphovert - [new version] -py3-none-any . whl Foruds\u00e6tninger \u00b6 Symphovert g\u00f8r brug af IBM Lotus Symphony. Det er vigtigt, at installationslokationen tilf\u00f8jes til brugerens PATH -milj\u00f8variabel p\u00e5 lige fod med LibreOffice . Den typiske sti er C:\\Program Files (x86)\\IBM\\Lotus\\Symphony . Opbygning \u00b6 Symphovert er en CLI, og skal derfor benyttes direkte i for eksempel PowerShell. CLI'en er opbygget som f\u00f8lger. symphovert [OPTIONS] [ARGS] [COMMAND] Argumenter, optioner, og kommandoer er beskrevet i det f\u00f8lgende. Argumenter \u00b6 Symphovert har to inputargumenter, som begge er p\u00e5kr\u00e6vede: FILES og OUTDIR . FILES skal angive stien til den files.db fil, der tidligere i processen er genereret af Digiarch , mens OUTDIR skal angive stien, hvori de konverterede filer skal gemmes. Eksempel symphovert D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out [COMMAND] Symphovert genererer selv en mappe baseret p\u00e5 AARS-ID'et , og det er derfor kun n\u00f8dvendigt at angive en overordnet folder i OUTDIR . Optioner \u00b6 Symphovert har to optioner, der, som navnet antyder, ikke er p\u00e5kr\u00e6vede: --help printer hj\u00e6lp --version printer versionen af Symphovert Bem\u00e6rk, at Symphovert ikke har en --threshold -option. Dette er fordi det forventes, at der sker relativt mange fejl i konvertering med Symphovert, og det derfor bedst giver mening bare at lade den fors\u00f8ge. --help og --version kan som de eneste kaldes uden at angive argumenter, da de blot giver information om selve CLI'en. Eksempel symphovert - -help symphovert - -version Kommandoer \u00b6 Symphovert har pt. \u00e9n kommando kaldet main . Denne kommando konverterer filer til Aarhus Stadsarkivs pr\u00e6definerede Master-formater. Disse er blandt andre Open Document Text for alle Word-lignende filer, PDF/A for PDF-filer, og TIFF for billedfiler. Eksempel symphovert D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out main I fremtiden skal Symphovert ogs\u00e5 kunne h\u00e5ndtere konvertering af alle Master-filer til arkiveringsformater, s\u00e5ledes der kan genereres juridiske afleveringer. Dette b\u00f8r v\u00e6re en separat kommando. Konvertering \u00b6 N\u00e5r Symphovert s\u00e6ttes i gang med at konvertere, er der ikke umiddelbart behov for yderligere brugerinput. Konvertering tager i gennemsnit 20s/fil. Bem\u00e6rk Symphovert-konvertering er en s\u00e6rdeles ustabil proces. Det anbefales at v\u00e6bne sig med t\u00e5lmodighed, og man skal v\u00e6re forberedt p\u00e5 at skulle k\u00f8re konverteringen flere gange. \u00c5bn altid IBM Symphony f\u00f8r en konvertering, da en kold start for programmet er meget langsom. Vigtigt Det er ikke muligt at bruge den computer, Symphovert k\u00f8rer p\u00e5, samtidig med konvertering, da Symphovert overtager b\u00e5de mus- og tastaturinput. Under konvertering skriver Symphovert til tabellen _ConvertedFiles i den files.db , som Symphovert l\u00e6ser fra. I files.db laves ogs\u00e5 et s\u00e5kaldt view, _NotConverted , der p\u00e5 brugervenlig vis angiver de filer, der endnu ikke er konverteret. _ConvertedFiles -tabellen ser ud som f\u00f8lger. _ConvertedFiles column required type description file_id true int Fremmedn\u00f8gle til Files -tabellen uuid true str Universally Unique ID 4 _NotConverted -viewet baserer sig p\u00e5 _ConvertedFiles og Files . Det ser ud som f\u00f8lger. _NotConverted column required type description id true int ID fra Files -tabellen uuid true str Universally Unique ID 4 path true str Fuld sti til filen aars_path true str Sti med rod i AARS-mappen puid false str PRONOM ID signature false str Filsignatur warning false str Advarsel, hvis relevant I afsnittet om fejlrettelser beskrives det, hvorledes _ConvertedFiles manuelt opdateres, hvis der er behov herfor. Under konvertering skrives ogs\u00e5 til en logfil, symphovert.log , der kan findes i _metadata folderen under OUTDIR\\AARS-ID . Eksempel Antag, at originalfilerne D:\\filer\\AVID.AARS.3.1 bliver konverteret som f\u00f8lger. symphovert D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out main _ConvertedFiles og _NotConverted kan nu findes i databasefilen D:\\filer\\AVID.AARS.3.1\\_metadata\\files.db , mens logfilen kan findes i mappen D:\\filer\\out\\AVID.AARS.3.1\\_metadata . Fejlrettelser \u00b6 Under konvertering kan fejl opst\u00e5. Faktisk er det mere eller mindre garanteret ved konvertering med Symphovert. Fejl opdages ved at kigge i symphovert.log -filen, hvori de vil st\u00e5 som WARNING . N\u00e5r et job er afsluttet, skrives ogs\u00e5 en oversigt over antallet af fejl til sidst i log-filen. Eksempel I det f\u00f8lgende ses et uddrag af en symphovert.log -fil. Succesfuld konvertering angives med INFO , fejl angives med WARNING , og til slut ses en oversigt over antal fejl. 2021-02-25 19:25:48 INFO: Starting conversion of file.lwp 2021-02-25 19:25:55 INFO: Converted file.lwp successfully. 2021-02-26 09:19:16 INFO: Starting conversion of file_2.lwp 2021-02-26 09:19:36 Failed to convert file_2.lwp: Conversion of file_2.lwp failed! 2021-02-26 19:25:55 INFO: Finished conversion of 11438 files with 15 issues. Alle fejl i konvertering med Symphovert er kritiske. Det anbefales at k\u00f8re konverteringsjobbet et par gange, og til sidst lave eventuelle manuelle rettelser. Hvis filen ikke kan \u00e5bnes i Symphony, kan man med fordel pr\u00f8ve i LibreOffice - nogle gange er outputtet herfra acceptabelt. N\u00e5r filer konverteres manuelt, er det vigtigt at opdatere _ConvertedFiles -tabellen, s\u00e5ledes man bevarer oversigten over, hvilke filer der er konverterede. Dette g\u00f8res ved at inds\u00e6tte den manuelt konverterede fils ID og UUID, som vist i f\u00f8lgende eksempel. Eksempel Antag, at en fil med ID 6 og UUID 1bac98f5-156c-4a8d-813c-39ac559b3e93 ikke er konverteret. Den fremg\u00e5r i _NotConverted som f\u00f8lger. id uuid path aars_path puid signature warning 6 1bac98f5-156c-4a8d-813c-39ac559b3e93 D:\\files\\AARS.TEST\\file.lwp AARS.TEST\\file.lwp fmt/340 Lotus WordPro Document Filen konverteres nu manuelt, og `_ConvertedFiles opdateres med f\u00f8lgende SQL-statement. INSERT INTO _ConvertedFiles VALUES ( 6 , \"1bac98f5-156c-4a8d-813c-39ac559b3e93\" ) Herefter fremg\u00e5r filen ikke l\u00e6ngere i _NotConverted -viewet. Til tider kan filer ikke konverteres, fordi de viser sig at v\u00e6re korrupte eller p\u00e5 anden vis fejlbeh\u00e6ftede. Alle filer, der ikke kan eller skal konverteres, skal noteres i et dokument kaldet \"Konverteringsfejl\", og herudover skal en TIFF-fil, der forklarer den specifikke fejl, bruges som erstatning for den konverterede fil. Disse erstatningsfiler kan findes her . Til slut skal dette dokument gemmes som TIFF og fremg\u00e5 i kontekstdokumentationen. Skabelonen til dokumentet kan findes her . Eksempel Dokumentet \"Konverteringsfejl\" kan se ud som f\u00f8lger.","title":"Symphovert"},{"location":"tools/symphovert/#symphovert","text":"Symphovert er en CLI (Command-Line Interface), som benyttes til at konvertere filer, s\u00e5ledes de overholder Aarhus Stadsarkivs arkiveringskrav. Der l\u00e6ses fra DB-filen produceret af Digiarch .","title":"Symphovert"},{"location":"tools/symphovert/#installation","text":"Symphovert skal installeres via releases p\u00e5 GitHub. Download f\u00f8rst den seneste .whl -fil, og install\u00e9r herefter denne via pip . Eksempel pip install - -user C :\\ Downloads \\ symphovert - 0 . 2 . 1-py3-none-any . whl Bem\u00e6rk Installation via .whl -filer kr\u00e6ver, at pakken wheel er installeret. Dette skal kun foreg\u00e5 f\u00f8rste gang man har behov for at installere wheels, og det g\u00f8res som f\u00f8lger. pip install - -user wheel N\u00e5r Symphovert skal opdateres, bruges igen pip med en ny .whl -fil og --upgrade . Eksempel pip install - -user - -upgrade C :\\ Downloads \\ symphovert - [new version] -py3-none-any . whl","title":"Installation"},{"location":"tools/symphovert/#forudstninger","text":"Symphovert g\u00f8r brug af IBM Lotus Symphony. Det er vigtigt, at installationslokationen tilf\u00f8jes til brugerens PATH -milj\u00f8variabel p\u00e5 lige fod med LibreOffice . Den typiske sti er C:\\Program Files (x86)\\IBM\\Lotus\\Symphony .","title":"Foruds\u00e6tninger"},{"location":"tools/symphovert/#opbygning","text":"Symphovert er en CLI, og skal derfor benyttes direkte i for eksempel PowerShell. CLI'en er opbygget som f\u00f8lger. symphovert [OPTIONS] [ARGS] [COMMAND] Argumenter, optioner, og kommandoer er beskrevet i det f\u00f8lgende.","title":"Opbygning"},{"location":"tools/symphovert/#argumenter","text":"Symphovert har to inputargumenter, som begge er p\u00e5kr\u00e6vede: FILES og OUTDIR . FILES skal angive stien til den files.db fil, der tidligere i processen er genereret af Digiarch , mens OUTDIR skal angive stien, hvori de konverterede filer skal gemmes. Eksempel symphovert D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out [COMMAND] Symphovert genererer selv en mappe baseret p\u00e5 AARS-ID'et , og det er derfor kun n\u00f8dvendigt at angive en overordnet folder i OUTDIR .","title":"Argumenter"},{"location":"tools/symphovert/#optioner","text":"Symphovert har to optioner, der, som navnet antyder, ikke er p\u00e5kr\u00e6vede: --help printer hj\u00e6lp --version printer versionen af Symphovert Bem\u00e6rk, at Symphovert ikke har en --threshold -option. Dette er fordi det forventes, at der sker relativt mange fejl i konvertering med Symphovert, og det derfor bedst giver mening bare at lade den fors\u00f8ge. --help og --version kan som de eneste kaldes uden at angive argumenter, da de blot giver information om selve CLI'en. Eksempel symphovert - -help symphovert - -version","title":"Optioner"},{"location":"tools/symphovert/#kommandoer","text":"Symphovert har pt. \u00e9n kommando kaldet main . Denne kommando konverterer filer til Aarhus Stadsarkivs pr\u00e6definerede Master-formater. Disse er blandt andre Open Document Text for alle Word-lignende filer, PDF/A for PDF-filer, og TIFF for billedfiler. Eksempel symphovert D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out main I fremtiden skal Symphovert ogs\u00e5 kunne h\u00e5ndtere konvertering af alle Master-filer til arkiveringsformater, s\u00e5ledes der kan genereres juridiske afleveringer. Dette b\u00f8r v\u00e6re en separat kommando.","title":"Kommandoer"},{"location":"tools/symphovert/#konvertering","text":"N\u00e5r Symphovert s\u00e6ttes i gang med at konvertere, er der ikke umiddelbart behov for yderligere brugerinput. Konvertering tager i gennemsnit 20s/fil. Bem\u00e6rk Symphovert-konvertering er en s\u00e6rdeles ustabil proces. Det anbefales at v\u00e6bne sig med t\u00e5lmodighed, og man skal v\u00e6re forberedt p\u00e5 at skulle k\u00f8re konverteringen flere gange. \u00c5bn altid IBM Symphony f\u00f8r en konvertering, da en kold start for programmet er meget langsom. Vigtigt Det er ikke muligt at bruge den computer, Symphovert k\u00f8rer p\u00e5, samtidig med konvertering, da Symphovert overtager b\u00e5de mus- og tastaturinput. Under konvertering skriver Symphovert til tabellen _ConvertedFiles i den files.db , som Symphovert l\u00e6ser fra. I files.db laves ogs\u00e5 et s\u00e5kaldt view, _NotConverted , der p\u00e5 brugervenlig vis angiver de filer, der endnu ikke er konverteret. _ConvertedFiles -tabellen ser ud som f\u00f8lger. _ConvertedFiles column required type description file_id true int Fremmedn\u00f8gle til Files -tabellen uuid true str Universally Unique ID 4 _NotConverted -viewet baserer sig p\u00e5 _ConvertedFiles og Files . Det ser ud som f\u00f8lger. _NotConverted column required type description id true int ID fra Files -tabellen uuid true str Universally Unique ID 4 path true str Fuld sti til filen aars_path true str Sti med rod i AARS-mappen puid false str PRONOM ID signature false str Filsignatur warning false str Advarsel, hvis relevant I afsnittet om fejlrettelser beskrives det, hvorledes _ConvertedFiles manuelt opdateres, hvis der er behov herfor. Under konvertering skrives ogs\u00e5 til en logfil, symphovert.log , der kan findes i _metadata folderen under OUTDIR\\AARS-ID . Eksempel Antag, at originalfilerne D:\\filer\\AVID.AARS.3.1 bliver konverteret som f\u00f8lger. symphovert D :\\ filer \\ AVID . AARS . 3 . 1 \\ _metadata \\ files . db D :\\ filer \\ out main _ConvertedFiles og _NotConverted kan nu findes i databasefilen D:\\filer\\AVID.AARS.3.1\\_metadata\\files.db , mens logfilen kan findes i mappen D:\\filer\\out\\AVID.AARS.3.1\\_metadata .","title":"Konvertering"},{"location":"tools/symphovert/#fejlrettelser","text":"Under konvertering kan fejl opst\u00e5. Faktisk er det mere eller mindre garanteret ved konvertering med Symphovert. Fejl opdages ved at kigge i symphovert.log -filen, hvori de vil st\u00e5 som WARNING . N\u00e5r et job er afsluttet, skrives ogs\u00e5 en oversigt over antallet af fejl til sidst i log-filen. Eksempel I det f\u00f8lgende ses et uddrag af en symphovert.log -fil. Succesfuld konvertering angives med INFO , fejl angives med WARNING , og til slut ses en oversigt over antal fejl. 2021-02-25 19:25:48 INFO: Starting conversion of file.lwp 2021-02-25 19:25:55 INFO: Converted file.lwp successfully. 2021-02-26 09:19:16 INFO: Starting conversion of file_2.lwp 2021-02-26 09:19:36 Failed to convert file_2.lwp: Conversion of file_2.lwp failed! 2021-02-26 19:25:55 INFO: Finished conversion of 11438 files with 15 issues. Alle fejl i konvertering med Symphovert er kritiske. Det anbefales at k\u00f8re konverteringsjobbet et par gange, og til sidst lave eventuelle manuelle rettelser. Hvis filen ikke kan \u00e5bnes i Symphony, kan man med fordel pr\u00f8ve i LibreOffice - nogle gange er outputtet herfra acceptabelt. N\u00e5r filer konverteres manuelt, er det vigtigt at opdatere _ConvertedFiles -tabellen, s\u00e5ledes man bevarer oversigten over, hvilke filer der er konverterede. Dette g\u00f8res ved at inds\u00e6tte den manuelt konverterede fils ID og UUID, som vist i f\u00f8lgende eksempel. Eksempel Antag, at en fil med ID 6 og UUID 1bac98f5-156c-4a8d-813c-39ac559b3e93 ikke er konverteret. Den fremg\u00e5r i _NotConverted som f\u00f8lger. id uuid path aars_path puid signature warning 6 1bac98f5-156c-4a8d-813c-39ac559b3e93 D:\\files\\AARS.TEST\\file.lwp AARS.TEST\\file.lwp fmt/340 Lotus WordPro Document Filen konverteres nu manuelt, og `_ConvertedFiles opdateres med f\u00f8lgende SQL-statement. INSERT INTO _ConvertedFiles VALUES ( 6 , \"1bac98f5-156c-4a8d-813c-39ac559b3e93\" ) Herefter fremg\u00e5r filen ikke l\u00e6ngere i _NotConverted -viewet. Til tider kan filer ikke konverteres, fordi de viser sig at v\u00e6re korrupte eller p\u00e5 anden vis fejlbeh\u00e6ftede. Alle filer, der ikke kan eller skal konverteres, skal noteres i et dokument kaldet \"Konverteringsfejl\", og herudover skal en TIFF-fil, der forklarer den specifikke fejl, bruges som erstatning for den konverterede fil. Disse erstatningsfiler kan findes her . Til slut skal dette dokument gemmes som TIFF og fremg\u00e5 i kontekstdokumentationen. Skabelonen til dokumentet kan findes her . Eksempel Dokumentet \"Konverteringsfejl\" kan se ud som f\u00f8lger.","title":"Fejlrettelser"},{"location":"tools/tiffany/","text":"Tiffany \u00b6 Tiffany er et tekstbaseret v\u00e6rkt\u00f8j (Command-Line Interface), som benyttes til at udfylde relevante 'huller' i MasterDocuments med passende template filer, s\u00e5ledes de overholder de juridiske krav til en aflevering. Bem\u00e6rk Tiffany er specifikt tilrettet Improventos m\u00e5de at aflevere originalfiler p\u00e5, s\u00e5 skal v\u00e6rkt\u00f8jet bruges til andre afleveringer end Notes-baser, skal man v\u00e6re opm\u00e6rksom p\u00e5 dette. Advarsel Det er vigtigt, at man i videst mulige omfang gennemf\u00f8rer konverteringsprocessen med convertool inden man bruger Tiffany, da man ellers kan komme til at erstatte ikke-konverterede filer med dummyfiler. Installation \u00b6 Tiffany skal installeres via releases p\u00e5 GitHub. Download f\u00f8rst den seneste .whl -fil, og install\u00e9r herefter denne via pip . Eksempel pip install - -user C :\\ Downloads \\ tifler - 0 . 1 . 1-py3-none-any . whl Bem\u00e6rk Installation via .whl -filer kr\u00e6ver, at pakken wheel er installeret. Dette skal kun foreg\u00e5 f\u00f8rste gang man har behov for at installere wheels, og det g\u00f8res som f\u00f8lger. pip install - -user wheel Opdatering \u00b6 N\u00e5r tifler skal opdateres, bruges igen pip med en ny .whl -fil og --upgrade . Eksempel pip install - -user - -upgrade C :\\ Downloads \\ tifler - [new version] -py3-none-any . whl Brug \u00b6 Som commandline v\u00e6rkt\u00f8j, og skal Tiffany benyttes direkte i for eksempel PowerShell. CLI'en er opbygget som f\u00f8lger. tiffany [OPTIONS] [COMMANDS] [ARGS] Tiffany har to optioner, som hverken tager efterf\u00f8lgende kommmandoer eller argumenter: --help printer hj\u00e6lp --version printer versionen af Tiffany Eksempel tiffany - -help tiffany - -version Kommandoer \u00b6 Tiffany har to kommandoer: substitute or list . Substitute \u00b6 substitute erstatter tomme, ikke-bevaringsv\u00e6rdige, kodeordsbeskyttede eller korrumperede filer med dummyfiler, s\u00e5 arkiveringsversioner, hvor vi selv st\u00e5r for konvertering af filer, kan godkendes. Argumenter \u00b6 substitute tager to argumenter: DB_FILE og OUT_DIR . DB_FILE angiver stien til den files.db fil, der oprindeligt er genereret af Digiarch og som ligger i '_metadata'-mappen direkte under 'OriginalDocuments'-mappen) OUT_DIR angiver stien, hvor de allerede konverterede filer fra Convertool er gemt. Eksempel tiffany substitute .\\ AVID . AARS . 3 . 1 \\ OriginalDocuments \\ _metadata \\ files . db .\\ AVID . AARS . 3 . 1 \\ MasterDocuments Proces \u00b6 substitute gennemg\u00e5r overordnet to processer i fors\u00f8get p\u00e5 at finde ud af, hvilke dummyfiler, der skal/kan s\u00e6ttes hvor. F\u00f8rst arbejder den med files.db -databasens _EmptyDirectories -tabel for at finde kodeordsbeskyttede filer, og dern\u00e6st arbejdes der med et view kaldet _NotConverted , der lister alle filer, som ikke er konverterede. Kodeordsbeskyttede filer \u00b6 Hvis et originalt dokument er kodeordsbeskyttet, vil dokumentet ikke blive medtaget i den oprindelige aflevering fra Improvento, og der vil s\u00e5ledes blot v\u00e6re en tom folder i den docCollection , hvor dokumentet skulle have v\u00e6ret. Hver tom folder i de enkelte docCollection er registreret i _EmptyDirectories , s\u00e5 for hver r\u00e6kke i denne tabel g\u00f8res f\u00f8lgende: inds\u00e6t den relevante tif-template, hvor den originale fil skulle have v\u00e6ret. slet r\u00e6kken i _EmptyDirectories -tabellen. Efter endt proces vil _EmptyDirectories -tabellen v\u00e6re tom, og de resterende processer arbejder med _NotConverted -view'et. Korrumperede filer \u00b6 \u00d8delagte originalfiler, der ikke kan \u00e5bnes, figurerer i _NotConverted med f\u00f8lgende puid aca-error/2 . Disse filer erstattes af den relevante dummyfil, og tilf\u00f8jes efterf\u00f8lgende til _ConvertedFiles -tabellen. Ikke-bevaringsv\u00e6rdige filer \u00b6 For hver r\u00e6kke i _NotConverted -view'et unders\u00f8ger Tiffany om filens puid eller filudvidelse figurerer i den interne blacklist.py -fil, der lister alle de puid'er og filudvidelser, som vi har vurderet til at v\u00e6re kassable. Hvis en fil har et puid eller en filudvidelse, som vi har blacklisted, erstattes den af den relevante dummyfil, og filen tilf\u00f8jes til _ConvertedFiles -tabellen. Tomme filer \u00b6 Convertool h\u00e5ndterer aktuelt erstatningen af tomme filer med den relevante dummyfil. P\u00e5 sigt skal dette \u00e6ndres s\u00e5 Tiffany ogs\u00e5 tager sig af denne opgave. Selvom convertool allerede har h\u00e5ndteret denne proces, vil eventuelle tomme filer stadig fremg\u00e5 af i den id'liste, som Tiffanys list -kommando genererer. List \u00b6 list -kommandoen oplister alle id'er p\u00e5 filer, der er blevet erstattet af en dummyfil, fordelt p\u00e5 fejltype. Argumenter \u00b6 list tager \u00e9t argument: LOG_FILE , der angiver stien til Tiffanys logfil (se afsnittet logging ): Eksempel tiffany list .\\ AVID . AARS . 3 . 1 \\ MasterDocuments \\ _metadata \\ tiffany . log Proces \u00b6 list parser hele logfilen og printer id'er p\u00e5 alle de filer, der p\u00e5 grund af en eller anden fejl, er blevet erstattet af dummyfiler: Eksempel Empty files: 23 542 761 794 Password-protected files: 43 321 No corrupted files substituted with template Disposable files: 907 Finished listing templates used See the logfile and/or files.db for any remaining errors Listen af id'er kan kopieres og inds\u00e6ttes i det kontekstdokument med oplistning af konverteringsfejl, som skal vedl\u00e6gges enhver arkiveringsverion. Logging \u00b6 Hver gang man k\u00f8rer substitute vil Tiffany oprette (eller skrive til en eksisterende) logfil i _metadata -mappe i roden af OUT_DIR . Logformatet er f\u00f8lgende: timestamp, loglevel, description, path to relevant file/folder. Eks.: 2021-06-03 15:39:44 INFO: Started substituting relevant files with tif-templates 2021-06-03 15:39:44 INFO: Empty file substituted with template PATH: .AVID.AARS.1000.1\\MasterDocuments\\AVID.AARS.1000.1\\OriginalDocuments\\docCollection1\\1\\text.txt 2021-06-03 15:39:44 INFO: Replaced password-protected file with template PATH: .AVID.AARS.1000.1\\MasterDocuments\\AVID.AARS.1000.1\\OriginalDocuments\\docCollection1\\4 2021-06-03 15:39:44 INFO: Replaced disposable file with template PATH: .AVID.AARS.1000.1\\OriginalDocuments\\docCollection1\\8\\gs919w64.exe 2021-06-03 15:39:44 INFO: Finished substituting with template-files","title":"Tiffany"},{"location":"tools/tiffany/#tiffany","text":"Tiffany er et tekstbaseret v\u00e6rkt\u00f8j (Command-Line Interface), som benyttes til at udfylde relevante 'huller' i MasterDocuments med passende template filer, s\u00e5ledes de overholder de juridiske krav til en aflevering. Bem\u00e6rk Tiffany er specifikt tilrettet Improventos m\u00e5de at aflevere originalfiler p\u00e5, s\u00e5 skal v\u00e6rkt\u00f8jet bruges til andre afleveringer end Notes-baser, skal man v\u00e6re opm\u00e6rksom p\u00e5 dette. Advarsel Det er vigtigt, at man i videst mulige omfang gennemf\u00f8rer konverteringsprocessen med convertool inden man bruger Tiffany, da man ellers kan komme til at erstatte ikke-konverterede filer med dummyfiler.","title":"Tiffany"},{"location":"tools/tiffany/#installation","text":"Tiffany skal installeres via releases p\u00e5 GitHub. Download f\u00f8rst den seneste .whl -fil, og install\u00e9r herefter denne via pip . Eksempel pip install - -user C :\\ Downloads \\ tifler - 0 . 1 . 1-py3-none-any . whl Bem\u00e6rk Installation via .whl -filer kr\u00e6ver, at pakken wheel er installeret. Dette skal kun foreg\u00e5 f\u00f8rste gang man har behov for at installere wheels, og det g\u00f8res som f\u00f8lger. pip install - -user wheel","title":"Installation"},{"location":"tools/tiffany/#opdatering","text":"N\u00e5r tifler skal opdateres, bruges igen pip med en ny .whl -fil og --upgrade . Eksempel pip install - -user - -upgrade C :\\ Downloads \\ tifler - [new version] -py3-none-any . whl","title":"Opdatering"},{"location":"tools/tiffany/#brug","text":"Som commandline v\u00e6rkt\u00f8j, og skal Tiffany benyttes direkte i for eksempel PowerShell. CLI'en er opbygget som f\u00f8lger. tiffany [OPTIONS] [COMMANDS] [ARGS] Tiffany har to optioner, som hverken tager efterf\u00f8lgende kommmandoer eller argumenter: --help printer hj\u00e6lp --version printer versionen af Tiffany Eksempel tiffany - -help tiffany - -version","title":"Brug"},{"location":"tools/tiffany/#kommandoer","text":"Tiffany har to kommandoer: substitute or list .","title":"Kommandoer"},{"location":"tools/tiffany/#substitute","text":"substitute erstatter tomme, ikke-bevaringsv\u00e6rdige, kodeordsbeskyttede eller korrumperede filer med dummyfiler, s\u00e5 arkiveringsversioner, hvor vi selv st\u00e5r for konvertering af filer, kan godkendes.","title":"Substitute"},{"location":"tools/tiffany/#argumenter","text":"substitute tager to argumenter: DB_FILE og OUT_DIR . DB_FILE angiver stien til den files.db fil, der oprindeligt er genereret af Digiarch og som ligger i '_metadata'-mappen direkte under 'OriginalDocuments'-mappen) OUT_DIR angiver stien, hvor de allerede konverterede filer fra Convertool er gemt. Eksempel tiffany substitute .\\ AVID . AARS . 3 . 1 \\ OriginalDocuments \\ _metadata \\ files . db .\\ AVID . AARS . 3 . 1 \\ MasterDocuments","title":"Argumenter"},{"location":"tools/tiffany/#proces","text":"substitute gennemg\u00e5r overordnet to processer i fors\u00f8get p\u00e5 at finde ud af, hvilke dummyfiler, der skal/kan s\u00e6ttes hvor. F\u00f8rst arbejder den med files.db -databasens _EmptyDirectories -tabel for at finde kodeordsbeskyttede filer, og dern\u00e6st arbejdes der med et view kaldet _NotConverted , der lister alle filer, som ikke er konverterede.","title":"Proces"},{"location":"tools/tiffany/#list","text":"list -kommandoen oplister alle id'er p\u00e5 filer, der er blevet erstattet af en dummyfil, fordelt p\u00e5 fejltype.","title":"List"},{"location":"tools/tiffany/#argumenter_1","text":"list tager \u00e9t argument: LOG_FILE , der angiver stien til Tiffanys logfil (se afsnittet logging ): Eksempel tiffany list .\\ AVID . AARS . 3 . 1 \\ MasterDocuments \\ _metadata \\ tiffany . log","title":"Argumenter"},{"location":"tools/tiffany/#proces_1","text":"list parser hele logfilen og printer id'er p\u00e5 alle de filer, der p\u00e5 grund af en eller anden fejl, er blevet erstattet af dummyfiler: Eksempel Empty files: 23 542 761 794 Password-protected files: 43 321 No corrupted files substituted with template Disposable files: 907 Finished listing templates used See the logfile and/or files.db for any remaining errors Listen af id'er kan kopieres og inds\u00e6ttes i det kontekstdokument med oplistning af konverteringsfejl, som skal vedl\u00e6gges enhver arkiveringsverion.","title":"Proces"},{"location":"tools/tiffany/#logging","text":"Hver gang man k\u00f8rer substitute vil Tiffany oprette (eller skrive til en eksisterende) logfil i _metadata -mappe i roden af OUT_DIR . Logformatet er f\u00f8lgende: timestamp, loglevel, description, path to relevant file/folder. Eks.: 2021-06-03 15:39:44 INFO: Started substituting relevant files with tif-templates 2021-06-03 15:39:44 INFO: Empty file substituted with template PATH: .AVID.AARS.1000.1\\MasterDocuments\\AVID.AARS.1000.1\\OriginalDocuments\\docCollection1\\1\\text.txt 2021-06-03 15:39:44 INFO: Replaced password-protected file with template PATH: .AVID.AARS.1000.1\\MasterDocuments\\AVID.AARS.1000.1\\OriginalDocuments\\docCollection1\\4 2021-06-03 15:39:44 INFO: Replaced disposable file with template PATH: .AVID.AARS.1000.1\\OriginalDocuments\\docCollection1\\8\\gs919w64.exe 2021-06-03 15:39:44 INFO: Finished substituting with template-files","title":"Logging"},{"location":"tools/unarchiver/","text":"Unarchiver \u00b6 unarchiver er et v\u00e6rkt\u00f8j til at udpakke komplekse filer som mails og arkivfiler (.zip m.fl.).","title":"Unarchiver"},{"location":"tools/unarchiver/#unarchiver","text":"unarchiver er et v\u00e6rkt\u00f8j til at udpakke komplekse filer som mails og arkivfiler (.zip m.fl.).","title":"Unarchiver"}]}